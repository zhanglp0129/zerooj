syntax = "proto3";

package user;

option go_package = "./user";

import "google/protobuf/timestamp.proto";

// 注册登录
service RegisterLogin {
  // 用户注册
  rpc UserRegister(UserRegisterReq) returns (UserRegisterResp);
  // 用户登录
  rpc UserLogin(UserLoginReq) returns (UserLoginResp);
}
message UserRegisterReq {
  string username = 1;
  string password = 2;
  string email = 3;
  // 邮箱验证码
  string emailCheckCode = 4;
}
message UserRegisterResp {
  int64 id = 1;
}
message UserLoginReq {
  // 登陆时，用户名和邮箱只需要提供一个即可，另一个为空字符串
  string username = 1;
  string email = 2;
  string password = 3;
}
message UserLoginResp {
  int64 id = 1;
  uint32 permission = 2;
}

// 用户基本信息
service BaseInfo {
  // 获取用户基本信息，不包括密码，并缓存
  rpc GetBaseInfo(GetBaseInfoReq) returns (GetBaseInfoResp);
  // 根据用户名搜索用户，并缓存
  rpc SearchByUsername(SearchByUsernameReq) returns (SearchByUsernameResp);
  // 修改用户名，有7天冷却期
  rpc UpdateUsername(UpdateUsernameReq) returns (UpdateUsernameResp);
  // 修改密码
  rpc UpdatePassword(UpdatePasswordReq) returns (UpdatePasswordResp);
  // 忘记密码
  rpc ForgetPassword(ForgetPasswordReq) returns (ForgetPasswordResp);
  // 修改用户邮箱，有7天冷却期
  rpc UpdateEmail(UpdateEmailReq) returns (UpdateEmailResp);
  // 修改用户权限
  rpc UpdatePermission(UpdatePermissionReq) returns (UpdatePermissionResp);
}
message GetBaseInfoReq {
  int64 id = 1;
}
message GetBaseInfoResp {
  string username = 1;
  string email = 2;
  uint32 permission = 3;
}
message SearchByUsernameReq {
  string username = 1;
}
message SearchByUsernameResp {
  int64 id = 1;
}
message UpdateUsernameReq {
  int64 id = 1;
  // 修改后的用户名
  string username = 2;
}
message UpdateUsernameResp {
  string oldUsername = 1;
}
message UpdatePasswordReq {
  int64 id = 1;
  string oldPassword = 2;
  string newPassword = 3;
}
message UpdatePasswordResp {}
message ForgetPasswordReq {
  int64 id = 1;
  string newPassword = 2;
  // 邮箱验证码
  string emailCheckCode = 3;
}
message ForgetPasswordResp {}
message UpdateEmailReq {
  int64 id = 1;
  // 旧邮箱验证码
  string oldEmailCheckCode = 2;
  // 旧密码。与 旧邮箱验证码 只需一个即可
  string oldPassword = 3;
  // 修改后的邮箱
  string email = 4;
  // 修改后邮箱的验证码
  string emailCheckCode = 5;
}
message UpdateEmailResp {
  string oldEmail = 1;
}
message UpdatePermissionReq {
  // 被修改者id
  int64 id = 1;
  uint32 permission = 2;
}
message UpdatePermissionResp {
  uint32 oldPermission = 1;
}

// 用户简介
service Profile {
  // 获取用户简介
  rpc GetUserProfile(GetUserProfileReq) returns (GetUserProfileResp);
  // 修改用户简介，不包括个人网站和用户技能
  rpc UpdateUserProfile(UpdateUserProfileReq) returns (UpdateUserProfileResp);
  // 添加个人网站，最多5个
  rpc AddUserPersonalWebsite(AddUserPersonalWebsiteReq) returns (AddUserPersonalWebsiteResp);
  // 删除个人网站
  rpc DeleteUserPersonalWebsite(DeleteUserPersonalWebsiteReq) returns (DeleteUserPersonalWebsiteResp);
  // 添加用户技能，最多10个
  rpc AddUserSkill(AddUserSkillReq) returns (AddUserSkillResp);
  // 删除用户技能
  rpc DeleteUserSkill(DeleteUserSkillReq) returns (DeleteUserSkillResp);
}
message GetUserProfileReq {
  int64 userId = 1;
}
message GetUserProfileResp {
  string nickname = 1;
  string avatarURL = 2;
  uint32 gender = 3;
  // 出生日期，默认为当天
  google.protobuf.Timestamp birthday = 4;
  string personalIntroduction = 5;
  repeated PersonalWebsite websites = 6;
  repeated Skill skills = 7;
}
message PersonalWebsite {
  int64 websiteId = 1;
  string name = 2;
  string url = 3;
}
message Skill {
  int64 skillId = 1;
  string name = 2;
}
message UpdateUserProfileReq {
  int64 userId = 1;
  string nickname = 2;
  string avatarURL = 3;
  uint32 gender = 4;
  google.protobuf.Timestamp birthday = 5;
  string personalIntroduction = 6;
}
message UpdateUserProfileResp {}
message AddUserPersonalWebsiteReq {
  int64 userId = 1;
  string name = 2;
  string url = 3;
}
message AddUserPersonalWebsiteResp {
  int64 websiteId = 1;
}
message DeleteUserPersonalWebsiteReq {
  // 用户id，用于鉴权。只能删除自己的网站
  int64 userId = 1;
  int64 websiteId = 2;
}
message DeleteUserPersonalWebsiteResp {}
message AddUserSkillReq {
  int64 userId = 1;
  // 技能id，允许多个
  repeated int64 skillIds = 2;
}
message AddUserSkillResp {}
message DeleteUserSkillReq {
  int64 userId = 1;
  // 技能id，允许多个
  repeated int64 skillIds = 2;
}
message DeleteUserSkillResp {}

// 关注
service Follow {
  // 获取所有关注，分页查询
  rpc GetFollowings(GetFollowingsReq) returns (GetFollowingsResp);
  // 获取所有粉丝，分页查询
  rpc GetFans(GetFansReq) returns (GetFansResp);
  // 关注其他用户
  rpc FollowUser(FollowUserReq) returns (FollowUserResp);
  rpc UnfollowUser(UnfollowUserReq) returns (UnfollowUserResp);
}
message FollowUserInfo {
  int64 id = 1;
  string username = 2;
  string nickname = 3;
  string personalIntroduction = 4;
  string avatarURL = 5;
  repeated PersonalWebsite websites = 6;
  repeated Skill skills = 7;
  google.protobuf.Timestamp followAt = 8;
}
message GetFollowingsReq {
  int64 userId = 1;
  int32 pageNum = 2;
  int32 pageSize = 3;
}
message GetFollowingsResp {
  // 所有关注
  repeated FollowUserInfo followings = 1;
  // 记录总数
  int64 count = 2;
}
message GetFansReq {
  int64 userId = 1;
  int32 pageNum = 2;
  int32 pageSize = 3;
}
message GetFansResp {
  // 所有粉丝
  repeated FollowUserInfo fans = 1;
  // 记录总数
  int64 count = 2;
}
message FollowUserReq {
  // 关注者id，一般为当前登录用户
  int64 followerId = 1;
  // 被关注者id
  int64 followedId = 2;
}
message FollowUserResp {}
message UnfollowUserReq {
  // 关注者id，一般为当前登录用户
  int64 followerId = 1;
  // 被关注者id
  int64 followedId = 2;
}
message UnfollowUserResp {}

// 其他
service Other {
  // 添加技能
  rpc AddSkill(AddSkillReq) returns (AddSkillResp);
  // 修改技能
  rpc UpdateSkill(UpdateSkillReq) returns (UpdateSkillResp);
  // 搜索技能
  rpc SearchSkills(SearchSkillsReq) returns (SearchSkillsResp);
  // 删除技能
  rpc DeleteSkill(DeleteSkillReq) returns (DeleteSkillResp);
  // 强行删除技能
  rpc MustDeleteSkill(MustDeleteSkillReq) returns (MustDeleteSkillResp);
}
message AddSkillReq {
  string skillName = 1;
}
message AddSkillResp {
  int64 skillId = 1;
}
message UpdateSkillReq {
  int64 skillId = 1;
  // 修改后的名称
  string skillName = 2;
}
message UpdateSkillResp {}
message SearchSkillsReq {
  // 查询条件，技能名称
  string Name = 1;
  int32 pageNum = 2;
  int32 pageSize = 3;
}
message SearchSkillsResp {
  repeated Skill skills = 1;
  // 记录总数
  int64 count = 2;
}
message DeleteSkillReq {
  int64 skillId = 1;
}
message DeleteSkillResp {}
message MustDeleteSkillReq {
  int64 skillId = 1;
}
message MustDeleteSkillResp {
  // 拥有该技能的用户数量
  int64 userSkillCount = 1;
}