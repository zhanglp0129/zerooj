// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"zerooj/service/user/internal/logic/skill"
	"zerooj/service/user/internal/svc"
	"zerooj/service/user/pb/user"
)

type SkillServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedSkillServer
}

func NewSkillServer(svcCtx *svc.ServiceContext) *SkillServer {
	return &SkillServer{
		svcCtx: svcCtx,
	}
}

// 添加技能
func (s *SkillServer) AddSkill(ctx context.Context, in *user.AddSkillReq) (*user.AddSkillResp, error) {
	l := skilllogic.NewAddSkillLogic(ctx, s.svcCtx)
	return l.AddSkill(in)
}

// 修改技能
func (s *SkillServer) UpdateSkill(ctx context.Context, in *user.UpdateSkillReq) (*user.UpdateSkillResp, error) {
	l := skilllogic.NewUpdateSkillLogic(ctx, s.svcCtx)
	return l.UpdateSkill(in)
}

// 搜索技能
func (s *SkillServer) SearchSkills(ctx context.Context, in *user.SearchSkillsReq) (*user.SearchSkillsResp, error) {
	l := skilllogic.NewSearchSkillsLogic(ctx, s.svcCtx)
	return l.SearchSkills(in)
}

// 删除技能
func (s *SkillServer) DeleteSkill(ctx context.Context, in *user.DeleteSkillReq) (*user.DeleteSkillResp, error) {
	l := skilllogic.NewDeleteSkillLogic(ctx, s.svcCtx)
	return l.DeleteSkill(in)
}

// 强行删除技能
func (s *SkillServer) MustDeleteSkill(ctx context.Context, in *user.MustDeleteSkillReq) (*user.MustDeleteSkillResp, error) {
	l := skilllogic.NewMustDeleteSkillLogic(ctx, s.svcCtx)
	return l.MustDeleteSkill(in)
}

// 添加用户技能，最多10个
func (s *SkillServer) AddUserSkill(ctx context.Context, in *user.AddUserSkillReq) (*user.AddUserSkillResp, error) {
	l := skilllogic.NewAddUserSkillLogic(ctx, s.svcCtx)
	return l.AddUserSkill(in)
}

// 删除用户技能
func (s *SkillServer) DeleteUserSkill(ctx context.Context, in *user.DeleteUserSkillReq) (*user.DeleteUserSkillResp, error) {
	l := skilllogic.NewDeleteUserSkillLogic(ctx, s.svcCtx)
	return l.DeleteUserSkill(in)
}
