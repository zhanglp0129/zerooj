// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package skill

import (
	"context"

	"zerooj/service/user/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddSkillReq                   = user.AddSkillReq
	AddSkillResp                  = user.AddSkillResp
	AddUserPersonalWebsiteReq     = user.AddUserPersonalWebsiteReq
	AddUserPersonalWebsiteResp    = user.AddUserPersonalWebsiteResp
	AddUserSkillReq               = user.AddUserSkillReq
	AddUserSkillResp              = user.AddUserSkillResp
	DeleteSkillReq                = user.DeleteSkillReq
	DeleteSkillResp               = user.DeleteSkillResp
	DeleteUserPersonalWebsiteReq  = user.DeleteUserPersonalWebsiteReq
	DeleteUserPersonalWebsiteResp = user.DeleteUserPersonalWebsiteResp
	DeleteUserSkillReq            = user.DeleteUserSkillReq
	DeleteUserSkillResp           = user.DeleteUserSkillResp
	FollowUserInfo                = user.FollowUserInfo
	FollowUserReq                 = user.FollowUserReq
	FollowUserResp                = user.FollowUserResp
	GetBaseInfoReq                = user.GetBaseInfoReq
	GetBaseInfoResp               = user.GetBaseInfoResp
	GetFansReq                    = user.GetFansReq
	GetFansResp                   = user.GetFansResp
	GetFollowingsReq              = user.GetFollowingsReq
	GetFollowingsResp             = user.GetFollowingsResp
	GetPermissionReq              = user.GetPermissionReq
	GetPermissionResp             = user.GetPermissionResp
	GetUserProfileReq             = user.GetUserProfileReq
	GetUserProfileResp            = user.GetUserProfileResp
	MustDeleteSkillReq            = user.MustDeleteSkillReq
	MustDeleteSkillResp           = user.MustDeleteSkillResp
	PersonalWebsite               = user.PersonalWebsite
	SearchByUsernameReq           = user.SearchByUsernameReq
	SearchByUsernameResp          = user.SearchByUsernameResp
	SearchSkillsReq               = user.SearchSkillsReq
	SearchSkillsResp              = user.SearchSkillsResp
	SkillInfo                     = user.SkillInfo
	UnfollowUserReq               = user.UnfollowUserReq
	UnfollowUserResp              = user.UnfollowUserResp
	UpdateBaseInfoReq             = user.UpdateBaseInfoReq
	UpdateBaseInfoResp            = user.UpdateBaseInfoResp
	UpdatePermissionReq           = user.UpdatePermissionReq
	UpdatePermissionResp          = user.UpdatePermissionResp
	UpdateSkillReq                = user.UpdateSkillReq
	UpdateSkillResp               = user.UpdateSkillResp
	UpdateUserProfileReq          = user.UpdateUserProfileReq
	UpdateUserProfileResp         = user.UpdateUserProfileResp
	UserLoginReq                  = user.UserLoginReq
	UserLoginResp                 = user.UserLoginResp
	UserRegisterReq               = user.UserRegisterReq
	UserRegisterResp              = user.UserRegisterResp

	Skill interface {
		// 添加技能
		AddSkill(ctx context.Context, in *AddSkillReq, opts ...grpc.CallOption) (*AddSkillResp, error)
		// 修改技能
		UpdateSkill(ctx context.Context, in *UpdateSkillReq, opts ...grpc.CallOption) (*UpdateSkillResp, error)
		// 搜索技能
		SearchSkills(ctx context.Context, in *SearchSkillsReq, opts ...grpc.CallOption) (*SearchSkillsResp, error)
		// 删除技能
		DeleteSkill(ctx context.Context, in *DeleteSkillReq, opts ...grpc.CallOption) (*DeleteSkillResp, error)
		// 强行删除技能
		MustDeleteSkill(ctx context.Context, in *MustDeleteSkillReq, opts ...grpc.CallOption) (*MustDeleteSkillResp, error)
		// 添加用户技能，最多10个
		AddUserSkill(ctx context.Context, in *AddUserSkillReq, opts ...grpc.CallOption) (*AddUserSkillResp, error)
		// 删除用户技能
		DeleteUserSkill(ctx context.Context, in *DeleteUserSkillReq, opts ...grpc.CallOption) (*DeleteUserSkillResp, error)
	}

	defaultSkill struct {
		cli zrpc.Client
	}
)

func NewSkill(cli zrpc.Client) Skill {
	return &defaultSkill{
		cli: cli,
	}
}

// 添加技能
func (m *defaultSkill) AddSkill(ctx context.Context, in *AddSkillReq, opts ...grpc.CallOption) (*AddSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.AddSkill(ctx, in, opts...)
}

// 修改技能
func (m *defaultSkill) UpdateSkill(ctx context.Context, in *UpdateSkillReq, opts ...grpc.CallOption) (*UpdateSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.UpdateSkill(ctx, in, opts...)
}

// 搜索技能
func (m *defaultSkill) SearchSkills(ctx context.Context, in *SearchSkillsReq, opts ...grpc.CallOption) (*SearchSkillsResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.SearchSkills(ctx, in, opts...)
}

// 删除技能
func (m *defaultSkill) DeleteSkill(ctx context.Context, in *DeleteSkillReq, opts ...grpc.CallOption) (*DeleteSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.DeleteSkill(ctx, in, opts...)
}

// 强行删除技能
func (m *defaultSkill) MustDeleteSkill(ctx context.Context, in *MustDeleteSkillReq, opts ...grpc.CallOption) (*MustDeleteSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.MustDeleteSkill(ctx, in, opts...)
}

// 添加用户技能，最多10个
func (m *defaultSkill) AddUserSkill(ctx context.Context, in *AddUserSkillReq, opts ...grpc.CallOption) (*AddUserSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.AddUserSkill(ctx, in, opts...)
}

// 删除用户技能
func (m *defaultSkill) DeleteUserSkill(ctx context.Context, in *DeleteUserSkillReq, opts ...grpc.CallOption) (*DeleteUserSkillResp, error) {
	client := user.NewSkillClient(m.cli.Conn())
	return client.DeleteUserSkill(ctx, in, opts...)
}
