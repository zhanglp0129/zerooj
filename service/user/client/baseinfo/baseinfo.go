// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package baseinfo

import (
	"context"

	"zerooj/service/user/pb/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddSkillReq                   = user.AddSkillReq
	AddSkillResp                  = user.AddSkillResp
	AddUserPersonalWebsiteReq     = user.AddUserPersonalWebsiteReq
	AddUserPersonalWebsiteResp    = user.AddUserPersonalWebsiteResp
	AddUserSkillReq               = user.AddUserSkillReq
	AddUserSkillResp              = user.AddUserSkillResp
	DeleteSkillReq                = user.DeleteSkillReq
	DeleteSkillResp               = user.DeleteSkillResp
	DeleteUserPersonalWebsiteReq  = user.DeleteUserPersonalWebsiteReq
	DeleteUserPersonalWebsiteResp = user.DeleteUserPersonalWebsiteResp
	DeleteUserSkillReq            = user.DeleteUserSkillReq
	DeleteUserSkillResp           = user.DeleteUserSkillResp
	FollowUserInfo                = user.FollowUserInfo
	FollowUserReq                 = user.FollowUserReq
	FollowUserResp                = user.FollowUserResp
	ForgetPasswordReq             = user.ForgetPasswordReq
	ForgetPasswordResp            = user.ForgetPasswordResp
	GetBaseInfoReq                = user.GetBaseInfoReq
	GetBaseInfoResp               = user.GetBaseInfoResp
	GetFansReq                    = user.GetFansReq
	GetFansResp                   = user.GetFansResp
	GetFollowingsReq              = user.GetFollowingsReq
	GetFollowingsResp             = user.GetFollowingsResp
	GetPermissionReq              = user.GetPermissionReq
	GetPermissionResp             = user.GetPermissionResp
	GetUserProfileReq             = user.GetUserProfileReq
	GetUserProfileResp            = user.GetUserProfileResp
	MustDeleteSkillReq            = user.MustDeleteSkillReq
	MustDeleteSkillResp           = user.MustDeleteSkillResp
	PersonalWebsite               = user.PersonalWebsite
	SearchByUsernameReq           = user.SearchByUsernameReq
	SearchByUsernameResp          = user.SearchByUsernameResp
	SearchSkillsReq               = user.SearchSkillsReq
	SearchSkillsResp              = user.SearchSkillsResp
	SkillInfo                     = user.SkillInfo
	UnfollowUserReq               = user.UnfollowUserReq
	UnfollowUserResp              = user.UnfollowUserResp
	UpdateEmailReq                = user.UpdateEmailReq
	UpdateEmailResp               = user.UpdateEmailResp
	UpdatePasswordReq             = user.UpdatePasswordReq
	UpdatePasswordResp            = user.UpdatePasswordResp
	UpdatePermissionReq           = user.UpdatePermissionReq
	UpdatePermissionResp          = user.UpdatePermissionResp
	UpdateSkillReq                = user.UpdateSkillReq
	UpdateSkillResp               = user.UpdateSkillResp
	UpdateUserProfileReq          = user.UpdateUserProfileReq
	UpdateUserProfileResp         = user.UpdateUserProfileResp
	UpdateUsernameReq             = user.UpdateUsernameReq
	UpdateUsernameResp            = user.UpdateUsernameResp
	UserLoginReq                  = user.UserLoginReq
	UserLoginResp                 = user.UserLoginResp
	UserRegisterReq               = user.UserRegisterReq
	UserRegisterResp              = user.UserRegisterResp

	BaseInfo interface {
		// 获取用户基本信息，不包括密码，并缓存
		GetBaseInfo(ctx context.Context, in *GetBaseInfoReq, opts ...grpc.CallOption) (*GetBaseInfoResp, error)
		// 根据用户名搜索用户，并缓存
		SearchByUsername(ctx context.Context, in *SearchByUsernameReq, opts ...grpc.CallOption) (*SearchByUsernameResp, error)
		// 修改用户名，有7天冷却期
		UpdateUsername(ctx context.Context, in *UpdateUsernameReq, opts ...grpc.CallOption) (*UpdateUsernameResp, error)
		// 修改密码
		UpdatePassword(ctx context.Context, in *UpdatePasswordReq, opts ...grpc.CallOption) (*UpdatePasswordResp, error)
		// 忘记密码
		ForgetPassword(ctx context.Context, in *ForgetPasswordReq, opts ...grpc.CallOption) (*ForgetPasswordResp, error)
		// 修改用户邮箱，有7天冷却期
		UpdateEmail(ctx context.Context, in *UpdateEmailReq, opts ...grpc.CallOption) (*UpdateEmailResp, error)
		// 修改用户权限
		UpdatePermission(ctx context.Context, in *UpdatePermissionReq, opts ...grpc.CallOption) (*UpdatePermissionResp, error)
		// 获取用户权限
		GetPermission(ctx context.Context, in *GetPermissionReq, opts ...grpc.CallOption) (*GetPermissionResp, error)
	}

	defaultBaseInfo struct {
		cli zrpc.Client
	}
)

func NewBaseInfo(cli zrpc.Client) BaseInfo {
	return &defaultBaseInfo{
		cli: cli,
	}
}

// 获取用户基本信息，不包括密码，并缓存
func (m *defaultBaseInfo) GetBaseInfo(ctx context.Context, in *GetBaseInfoReq, opts ...grpc.CallOption) (*GetBaseInfoResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.GetBaseInfo(ctx, in, opts...)
}

// 根据用户名搜索用户，并缓存
func (m *defaultBaseInfo) SearchByUsername(ctx context.Context, in *SearchByUsernameReq, opts ...grpc.CallOption) (*SearchByUsernameResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.SearchByUsername(ctx, in, opts...)
}

// 修改用户名，有7天冷却期
func (m *defaultBaseInfo) UpdateUsername(ctx context.Context, in *UpdateUsernameReq, opts ...grpc.CallOption) (*UpdateUsernameResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.UpdateUsername(ctx, in, opts...)
}

// 修改密码
func (m *defaultBaseInfo) UpdatePassword(ctx context.Context, in *UpdatePasswordReq, opts ...grpc.CallOption) (*UpdatePasswordResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.UpdatePassword(ctx, in, opts...)
}

// 忘记密码
func (m *defaultBaseInfo) ForgetPassword(ctx context.Context, in *ForgetPasswordReq, opts ...grpc.CallOption) (*ForgetPasswordResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.ForgetPassword(ctx, in, opts...)
}

// 修改用户邮箱，有7天冷却期
func (m *defaultBaseInfo) UpdateEmail(ctx context.Context, in *UpdateEmailReq, opts ...grpc.CallOption) (*UpdateEmailResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.UpdateEmail(ctx, in, opts...)
}

// 修改用户权限
func (m *defaultBaseInfo) UpdatePermission(ctx context.Context, in *UpdatePermissionReq, opts ...grpc.CallOption) (*UpdatePermissionResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.UpdatePermission(ctx, in, opts...)
}

// 获取用户权限
func (m *defaultBaseInfo) GetPermission(ctx context.Context, in *GetPermissionReq, opts ...grpc.CallOption) (*GetPermissionResp, error) {
	client := user.NewBaseInfoClient(m.cli.Conn())
	return client.GetPermission(ctx, in, opts...)
}
