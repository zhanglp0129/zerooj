syntax = "proto3";

package problemset;

option go_package = "./problemset";

// 题目
service Problem {
  // 添加问题
  rpc AddProblem(AddProblemReq) returns (AddProblemResp);
  // 删除问题
  rpc DeleteProblem(DeleteProblemReq) returns (DeleteProblemResp);
  // 获取问题信息，可缓存
  rpc GetProblemContent(GetProblemContentReq) returns (GetProblemContentResp);
  // 更新问题
  rpc UpdateProblem(UpdateProblemReq) returns (UpdateProblemResp);
  // 分页搜索题目
  rpc SearchProblem(SearchProblemReq) returns (SearchProblemResp);
}
message AddProblemReq {
  string title = 1;
  uint32 difficulty = 2;
  string description = 3;
  string inputDescription = 4;
  string outputDescription = 5;
  string scaleDescription = 6;
}
message AddProblemResp {
  int64 id = 1;
}
message DeleteProblemReq {
  int64 problemId = 1;
}
message DeleteProblemResp {}
message GetProblemContentReq {
  int64 problemId = 1;
}
message GetProblemContentResp {
  string title = 1;
  uint32 difficulty = 2;
  // 题目描述在minio的对象名
  string descriptionObjectName = 3;
  string inputDescription = 4;
  string outputDescription = 5;
  string scaleDescription = 6;
  int64 timeLimit = 7;
  int64 memoryLimit = 8;
}
message UpdateProblemReq {
  int64 problemId = 1;
  uint32 difficulty = 2;
  string description = 3;
  string inputDescription = 4;
  string outputDescription = 5;
  string scaleDescription = 6;
  int64 timeLimit = 7;
  int64 memoryLimit = 8;
}
message UpdateProblemResp {}
message SearchProblemReq {
  string problemName = 1;
  repeated int64 tagIds = 2;
  uint32 difficulty = 3;
  // 用户id，用于判断题目的状态
  int64 userId = 4;
  // 只有当userId!=0时，状态才有效
  uint32 status = 5;
  int32 pageNum = 6;
  int32 pageSize = 7;
}
message SearchProblemResp {
  repeated int64 problemIds = 1;
  int64 count = 2;
}

// 标签
service Tag {
  // 添加标签
  rpc AddTags(AddTagsReq) returns (AddTagsResp);
  // 删除标签
  rpc DeleteTags(DeleteTagsReq) returns (DeleteTagsResp);
  // 强行删除标签
  rpc MustDeleteTags(MustDeleteTagsReq) returns (MustDeleteTagsResp);
  // 更新标签
  rpc UpdateTags(UpdateTagsReq) returns (UpdateTagsResp);
  // 获取所有标签，可缓存
  rpc GetAllTags(GetAllTagsReq) returns (GetAllTagsResp);
  // 给题目添加标签，最多5个
  rpc ProblemAddTags(ProblemAddTagsReq) returns (ProblemAddTagsResp);
  // 给题目删除标签
  rpc ProblemDeleteTags(ProblemDeleteTagsReq) returns (ProblemDeleteTagsResp);
  // 获取一个题目的所有标签，可缓存
  rpc GetProblemTags(GetProblemTagsReq) returns (GetProblemTagsResp);
}
message AddTagsReq {
  string name = 1;
}
message AddTagsResp {
  int64 id = 1;
}
message DeleteTagsReq {
  int64 tagId = 1;
}
message DeleteTagsResp {}
message MustDeleteTagsReq {
  int64 tagId = 1;
}
message MustDeleteTagsResp {}
message UpdateTagsReq {
  int64 tagId = 1;
  // 修改后标签名字
  string name = 2;
}
message UpdateTagsResp {}
message GetAllTagsReq {}
// 标签信息
message TagInfo {
  int64 tagId = 1;
  string name = 2;
}
message GetAllTagsResp {
  repeated TagInfo tags = 1;
}
message ProblemAddTagsReq {
  int64 problemId = 1;
  repeated int64 tagIds = 2;
}
message ProblemAddTagsResp {}
message ProblemDeleteTagsReq {
  int64 problemId = 1;
  repeated int64 tagIds = 2;
}
message ProblemDeleteTagsResp {}
message GetProblemTagsReq {
  int64 problemId = 1;
}
message GetProblemTagsResp {
  repeated TagInfo tags = 1;
}

// 样例
service Example {
  // 添加样例
  rpc AddExample(AddExampleReq) returns (AddExampleResp);
  // 删除样例
  rpc DeleteExample(DeleteExampleReq) returns (DeleteExampleResp);
  // 修改样例
  rpc UpdateExample(UpdateExampleReq) returns (UpdateExampleResp);
  // 获取样例
  rpc GetExample(GetExampleReq) returns (GetExampleResp);
  // 获取题目的所有样例
  rpc GetProblemExamples(GetProblemExamplesReq) returns (GetProblemExamplesResp);
}
message ExampleInfo {
  int64 exampleId = 1;
  string input = 2;
  string output = 3;
  string explanation = 4;
}
message AddExampleReq {
  int64 problemId = 1;
  string input = 2;
  string output = 3;
  string explanation = 4;
}
message AddExampleResp {
  int64 id = 1;
}
message DeleteExampleReq {
  int64 exampleId = 1;
}
message DeleteExampleResp {}
message UpdateExampleReq {
  ExampleInfo example = 1;
}
message UpdateExampleResp {}
message GetExampleReq {
  int64 exampleId = 1;
}
message GetExampleResp {
  ExampleInfo example = 1;
}
message GetProblemExamplesReq {
  int64 problemId = 1;
}
message GetProblemExamplesResp {
  repeated ExampleInfo examples = 1;
}

// 提示
service Hint {
  // 添加提示
  rpc AddHint(AddHintReq) returns (AddHintResp);
  // 删除提示
  rpc DeleteHint(DeleteHintReq) returns (DeleteHintResp);
  // 修改提示
  rpc UpdateHint(UpdateHintReq) returns (UpdateHintResp);
  // 获取提示
  rpc GetHint(GetHintReq) returns (GetHintResp);
  // 获取题目所有提示
  rpc GetProblemHints(GetProblemHintsReq) returns (GetProblemHintsResp);
}
message HintInfo {
  int64 hintId = 1;
  string content = 2;
}
message AddHintReq {
  int64 problemId = 1;
  string content = 2;
}
message AddHintResp {
  int64 id = 1;
}
message DeleteHintReq {
  int64 hintId = 1;
}
message DeleteHintResp {}
message UpdateHintReq {
  HintInfo hint = 1;
}
message UpdateHintResp {}
message GetHintReq {
  int64 hintId = 1;
}
message GetHintResp {
  HintInfo hint = 1;
}
message GetProblemHintsReq {
  int64 problemId = 1;
}
message GetProblemHintsResp {
  repeated HintInfo hint = 1;
}

// 评测数据
service JudgeData {
  // 添加测评数据
  rpc AddJudgeData(AddJudgeDataReq) returns (AddJudgeDataResp);
  // 删除测评数据
  rpc DeleteJudgeData(DeleteJudgeDataReq) returns (DeleteJudgeDataResp);
  // 修改测评数据
  rpc UpdateJudgeData(UpdateJudgeDataReq) returns (UpdateJudgeDataResp);
  // 获取题目的测评数据，返回minio对象名称，可缓存
  rpc GetJudgeData(GetJudgeDataReq) returns (GetJudgeDataResp);
}
message JudgeDataInfo {
  int64 judgeDataId = 1;
  string inputObjectName = 2;
  string outputObjectName = 3;
}
message AddJudgeDataReq {
  int64 problemId = 1;
  // 输入数据内容
  string input = 3;
  // 输出数据内容
  string output = 4;
}
message AddJudgeDataResp {
  int64 id = 1;
}
message DeleteJudgeDataReq {
  int64 judgeDataId = 1;
}
message DeleteJudgeDataResp {}
message UpdateJudgeDataReq {
  int64 judgeDataId = 1;
  // 输入数据内容
  string input = 2;
  // 输出数据内容
  string output = 3;
}
message UpdateJudgeDataResp {}
message GetJudgeDataReq {
  int64 problemId = 1;
}
message GetJudgeDataResp {
  repeated JudgeDataInfo judgeData = 1;
}

// 编程语言
service Language {
  // 添加语言
  rpc AddLanguage(AddLanguageReq) returns (AddLanguageResp);
  // 删除语言
  rpc DeleteLanguage(DeleteLanguageReq) returns (DeleteLanguageResp);
  // 更新语言
  rpc UpdateLanguage(UpdateLanguageReq) returns (UpdateLanguageResp);
  // 获取所有语言
  rpc GetLanguages(GetLanguagesReq) returns (GetLanguagesResp);
  // 根据id获取语言
  rpc GetLanguageById(GetLanguageByIdReq) returns (GetLanguageByIdResp);
  // 给题目增加语言
  rpc ProblemAddLanguages (ProblemAddLanguagesReq) returns (ProblemAddLanguagesResp);
  // 题目删除语言
  rpc ProblemDeleteLanguages (ProblemDeleteLanguagesReq) returns (ProblemDeleteLanguagesResp);
  // 获取题目的所有语言
  rpc GetProblemLanguages (GetProblemLanguagesReq) returns (GetProblemLanguagesResp);
}
message LanguageInfo {
  int64 languageId = 1;
  string name = 2;
  string version = 3;
}
message ProblemLanguagesModel {
  int64 languageId = 1;
  int64 timeLimit = 2;
  int64 memoryLimit = 3;
}
message AddLanguageReq {
  string name = 1;
  string version = 2;
}
message AddLanguageResp {
  int64 id = 1;
}
message DeleteLanguageReq {
  int64 languageId = 1;
}
message DeleteLanguageResp {}
message UpdateLanguageReq {
  LanguageInfo language = 1;
}
message UpdateLanguageResp {}
message GetLanguagesReq {}
message GetLanguagesResp {
  repeated LanguageInfo language = 1;
}
message GetLanguageByIdReq {
  int64 languageId = 1;
}
message GetLanguageByIdResp {
  LanguageInfo language = 1;
}
message ProblemAddLanguagesReq {
  int64 problemId = 1;
  // 数据模型
  repeated ProblemLanguagesModel model = 2;
}
message ProblemAddLanguagesResp {}
message ProblemDeleteLanguagesReq {
  int64 problemId = 1;
  repeated int64 languageIds = 2;
}
message ProblemDeleteLanguagesResp {}
message GetProblemLanguagesReq {
  int64 problemId = 1;
}
message GetProblemLanguagesResp {
  // 数据模型
  repeated ProblemLanguagesModel model = 1;
}

// 提交
service Submit {
  // 用户提交代码
  rpc SubmitCode(SubmitCodeReq) returns (SubmitCodeResp);
  // 获取题目的提交数
  rpc GetProblemSubmitCount(GetProblemSubmitCountReq) returns (GetProblemSubmitCountResp);
  // 分页获取用户提交
  rpc GetUserSubmit(GetUserSubmitReq) returns (GetUserSubmitResp);
  // 获取用户某一道题的全部提交
  rpc GetUserProblemSubmit(GetUserProblemSubmitReq) returns (GetUserProblemSubmitResp);
  // 获取通过id提交记录
  rpc GetSubmitById(GetSubmitByIdReq) returns (GetSubmitByIdResp);
}
message SubmitInfo {
  int64 submitId = 1;
  int64 userId = 2;
  int64 problemId = 3;
  LanguageInfo language = 4;
  uint32 result = 5;
  // 用户提交的代码，在minio的对象名
  string codeObjectName = 6;
  int64 runTime = 7;
  int64 memoryConsumption = 8;
}
message SubmitCodeReq {
  int64 userId = 1;
  int64 problemId = 2;
  int64 languageId = 3;
  // 代码原文
  string code = 4;
}
message SubmitCodeResp {
  int64 submitId = 1;
}
message GetProblemSubmitCountReq {
  int64 problemId = 1;
}
message GetProblemSubmitCountResp {
  // 提交数
  int64 submitCount = 1;
  // 通过数
  int64 acceptCount = 2;
}
message GetUserSubmitReq {
  int64 userId = 1;
  int32 pageNum = 2;
  int32 pageSize = 3;
}
message GetUserSubmitResp {
  repeated SubmitInfo submits = 1;
  // 总记录数
  int64 count = 2;
}
message GetUserProblemSubmitReq {
  int64 userId = 1;
  int64 problemId = 2;
}
message GetUserProblemSubmitResp {
  repeated SubmitInfo submits = 1;
}
message GetSubmitByIdReq {
  int64 submitId = 1;
}
message GetSubmitByIdResp {
  SubmitInfo submit = 1;
}