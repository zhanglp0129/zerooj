// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: problemset.proto

package problemset

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProblemInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId         int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Title             string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Difficulty        uint32 `protobuf:"varint,1,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Description       string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	InputDescription  string `protobuf:"bytes,5,opt,name=inputDescription,proto3" json:"inputDescription,omitempty"`
	OutputDescription string `protobuf:"bytes,6,opt,name=outputDescription,proto3" json:"outputDescription,omitempty"`
	ScaleDescription  string `protobuf:"bytes,7,opt,name=scaleDescription,proto3" json:"scaleDescription,omitempty"`
}

func (x *ProblemInfo) Reset() {
	*x = ProblemInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemInfo) ProtoMessage() {}

func (x *ProblemInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemInfo.ProtoReflect.Descriptor instead.
func (*ProblemInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{0}
}

func (x *ProblemInfo) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ProblemInfo) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *ProblemInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProblemInfo) GetInputDescription() string {
	if x != nil {
		return x.InputDescription
	}
	return ""
}

func (x *ProblemInfo) GetOutputDescription() string {
	if x != nil {
		return x.OutputDescription
	}
	return ""
}

func (x *ProblemInfo) GetScaleDescription() string {
	if x != nil {
		return x.ScaleDescription
	}
	return ""
}

type AddProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Difficulty        uint32 `protobuf:"varint,1,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Description       string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	InputDescription  string `protobuf:"bytes,4,opt,name=inputDescription,proto3" json:"inputDescription,omitempty"`
	OutputDescription string `protobuf:"bytes,5,opt,name=outputDescription,proto3" json:"outputDescription,omitempty"`
	ScaleDescription  string `protobuf:"bytes,6,opt,name=scaleDescription,proto3" json:"scaleDescription,omitempty"`
}

func (x *AddProblemReq) Reset() {
	*x = AddProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemReq) ProtoMessage() {}

func (x *AddProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemReq.ProtoReflect.Descriptor instead.
func (*AddProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{1}
}

func (x *AddProblemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddProblemReq) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *AddProblemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddProblemReq) GetInputDescription() string {
	if x != nil {
		return x.InputDescription
	}
	return ""
}

func (x *AddProblemReq) GetOutputDescription() string {
	if x != nil {
		return x.OutputDescription
	}
	return ""
}

func (x *AddProblemReq) GetScaleDescription() string {
	if x != nil {
		return x.ScaleDescription
	}
	return ""
}

type AddProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddProblemResp) Reset() {
	*x = AddProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemResp) ProtoMessage() {}

func (x *AddProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemResp.ProtoReflect.Descriptor instead.
func (*AddProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{2}
}

func (x *AddProblemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *DeleteProblemReq) Reset() {
	*x = DeleteProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemReq) ProtoMessage() {}

func (x *DeleteProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemReq.ProtoReflect.Descriptor instead.
func (*DeleteProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteProblemReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type DeleteProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProblemResp) Reset() {
	*x = DeleteProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemResp) ProtoMessage() {}

func (x *DeleteProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemResp.ProtoReflect.Descriptor instead.
func (*DeleteProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{4}
}

type GetProblemContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemContentReq) Reset() {
	*x = GetProblemContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemContentReq) ProtoMessage() {}

func (x *GetProblemContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemContentReq.ProtoReflect.Descriptor instead.
func (*GetProblemContentReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{5}
}

func (x *GetProblemContentReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem *ProblemInfo `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
}

func (x *GetProblemContentResp) Reset() {
	*x = GetProblemContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemContentResp) ProtoMessage() {}

func (x *GetProblemContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemContentResp.ProtoReflect.Descriptor instead.
func (*GetProblemContentResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{6}
}

func (x *GetProblemContentResp) GetProblem() *ProblemInfo {
	if x != nil {
		return x.Problem
	}
	return nil
}

type UpdateProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Problem *ProblemInfo `protobuf:"bytes,1,opt,name=problem,proto3" json:"problem,omitempty"`
}

func (x *UpdateProblemReq) Reset() {
	*x = UpdateProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemReq) ProtoMessage() {}

func (x *UpdateProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemReq.ProtoReflect.Descriptor instead.
func (*UpdateProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateProblemReq) GetProblem() *ProblemInfo {
	if x != nil {
		return x.Problem
	}
	return nil
}

type UpdateProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProblemResp) Reset() {
	*x = UpdateProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemResp) ProtoMessage() {}

func (x *UpdateProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemResp.ProtoReflect.Descriptor instead.
func (*UpdateProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{8}
}

type SearchProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemTitle string  `protobuf:"bytes,1,opt,name=problemTitle,proto3" json:"problemTitle,omitempty"`
	TagIds       []int64 `protobuf:"varint,2,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
	Difficulty   uint32  `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	// // 用户id，用于判断题目的状态
	// int64 userId = 4;
	// // 只有当userId!=0时，题目状态才有效
	// uint32 problemStatus = 5;
	PageNum  int32 `protobuf:"varint,6,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32 `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *SearchProblemReq) Reset() {
	*x = SearchProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemReq) ProtoMessage() {}

func (x *SearchProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemReq.ProtoReflect.Descriptor instead.
func (*SearchProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{9}
}

func (x *SearchProblemReq) GetProblemTitle() string {
	if x != nil {
		return x.ProblemTitle
	}
	return ""
}

func (x *SearchProblemReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *SearchProblemReq) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *SearchProblemReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchProblemReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemIds []int64 `protobuf:"varint,1,rep,packed,name=problemIds,proto3" json:"problemIds,omitempty"`
	Count      int64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SearchProblemResp) Reset() {
	*x = SearchProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemResp) ProtoMessage() {}

func (x *SearchProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemResp.ProtoReflect.Descriptor instead.
func (*SearchProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{10}
}

func (x *SearchProblemResp) GetProblemIds() []int64 {
	if x != nil {
		return x.ProblemIds
	}
	return nil
}

func (x *SearchProblemResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddTagReq) Reset() {
	*x = AddTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagReq) ProtoMessage() {}

func (x *AddTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagReq.ProtoReflect.Descriptor instead.
func (*AddTagReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{11}
}

func (x *AddTagReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddTagResp) Reset() {
	*x = AddTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagResp) ProtoMessage() {}

func (x *AddTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagResp.ProtoReflect.Descriptor instead.
func (*AddTagResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{12}
}

func (x *AddTagResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *DeleteTagReq) Reset() {
	*x = DeleteTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagReq) ProtoMessage() {}

func (x *DeleteTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagReq.ProtoReflect.Descriptor instead.
func (*DeleteTagReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type DeleteTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTagResp) Reset() {
	*x = DeleteTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagResp) ProtoMessage() {}

func (x *DeleteTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagResp.ProtoReflect.Descriptor instead.
func (*DeleteTagResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{14}
}

type MustDeleteTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *MustDeleteTagReq) Reset() {
	*x = MustDeleteTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MustDeleteTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MustDeleteTagReq) ProtoMessage() {}

func (x *MustDeleteTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MustDeleteTagReq.ProtoReflect.Descriptor instead.
func (*MustDeleteTagReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{15}
}

func (x *MustDeleteTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type MustDeleteTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MustDeleteTagResp) Reset() {
	*x = MustDeleteTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MustDeleteTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MustDeleteTagResp) ProtoMessage() {}

func (x *MustDeleteTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MustDeleteTagResp.ProtoReflect.Descriptor instead.
func (*MustDeleteTagResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{16}
}

type UpdateTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	// 修改后标签名字
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateTagReq) Reset() {
	*x = UpdateTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagReq) ProtoMessage() {}

func (x *UpdateTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagReq.ProtoReflect.Descriptor instead.
func (*UpdateTagReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *UpdateTagReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateTagResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTagResp) Reset() {
	*x = UpdateTagResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagResp) ProtoMessage() {}

func (x *UpdateTagResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagResp.ProtoReflect.Descriptor instead.
func (*UpdateTagResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{18}
}

type GetAllTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTagsReq) Reset() {
	*x = GetAllTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsReq) ProtoMessage() {}

func (x *GetAllTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsReq.ProtoReflect.Descriptor instead.
func (*GetAllTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{19}
}

// 标签信息
type TagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TagInfo) Reset() {
	*x = TagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagInfo) ProtoMessage() {}

func (x *TagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagInfo.ProtoReflect.Descriptor instead.
func (*TagInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{20}
}

func (x *TagInfo) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *TagInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*TagInfo `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetAllTagsResp) Reset() {
	*x = GetAllTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsResp) ProtoMessage() {}

func (x *GetAllTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsResp.ProtoReflect.Descriptor instead.
func (*GetAllTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{21}
}

func (x *GetAllTagsResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProblemAddTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64   `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	TagIds    []int64 `protobuf:"varint,2,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
}

func (x *ProblemAddTagsReq) Reset() {
	*x = ProblemAddTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddTagsReq) ProtoMessage() {}

func (x *ProblemAddTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddTagsReq.ProtoReflect.Descriptor instead.
func (*ProblemAddTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{22}
}

func (x *ProblemAddTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemAddTagsReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type ProblemAddTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemAddTagsResp) Reset() {
	*x = ProblemAddTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddTagsResp) ProtoMessage() {}

func (x *ProblemAddTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddTagsResp.ProtoReflect.Descriptor instead.
func (*ProblemAddTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{23}
}

type ProblemDeleteTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64   `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	TagIds    []int64 `protobuf:"varint,2,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
}

func (x *ProblemDeleteTagsReq) Reset() {
	*x = ProblemDeleteTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteTagsReq) ProtoMessage() {}

func (x *ProblemDeleteTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteTagsReq.ProtoReflect.Descriptor instead.
func (*ProblemDeleteTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{24}
}

func (x *ProblemDeleteTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemDeleteTagsReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type ProblemDeleteTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemDeleteTagsResp) Reset() {
	*x = ProblemDeleteTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteTagsResp) ProtoMessage() {}

func (x *ProblemDeleteTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteTagsResp.ProtoReflect.Descriptor instead.
func (*ProblemDeleteTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{25}
}

type GetProblemTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemTagsReq) Reset() {
	*x = GetProblemTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTagsReq) ProtoMessage() {}

func (x *GetProblemTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTagsReq.ProtoReflect.Descriptor instead.
func (*GetProblemTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{26}
}

func (x *GetProblemTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*TagInfo `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetProblemTagsResp) Reset() {
	*x = GetProblemTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTagsResp) ProtoMessage() {}

func (x *GetProblemTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTagsResp.ProtoReflect.Descriptor instead.
func (*GetProblemTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{27}
}

func (x *GetProblemTagsResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ExampleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleId   int64  `protobuf:"varint,1,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
	ProblemId   int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Input       string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Explanation string `protobuf:"bytes,5,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *ExampleInfo) Reset() {
	*x = ExampleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleInfo) ProtoMessage() {}

func (x *ExampleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleInfo.ProtoReflect.Descriptor instead.
func (*ExampleInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{28}
}

func (x *ExampleInfo) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

func (x *ExampleInfo) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ExampleInfo) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *ExampleInfo) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *ExampleInfo) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type AddExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId   int64  `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Input       string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Explanation string `protobuf:"bytes,4,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *AddExampleReq) Reset() {
	*x = AddExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExampleReq) ProtoMessage() {}

func (x *AddExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExampleReq.ProtoReflect.Descriptor instead.
func (*AddExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{29}
}

func (x *AddExampleReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddExampleReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AddExampleReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *AddExampleReq) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type AddExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddExampleResp) Reset() {
	*x = AddExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExampleResp) ProtoMessage() {}

func (x *AddExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExampleResp.ProtoReflect.Descriptor instead.
func (*AddExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{30}
}

func (x *AddExampleResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleId int64 `protobuf:"varint,1,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
}

func (x *DeleteExampleReq) Reset() {
	*x = DeleteExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExampleReq) ProtoMessage() {}

func (x *DeleteExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExampleReq.ProtoReflect.Descriptor instead.
func (*DeleteExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{31}
}

func (x *DeleteExampleReq) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

type DeleteExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExampleResp) Reset() {
	*x = DeleteExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExampleResp) ProtoMessage() {}

func (x *DeleteExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExampleResp.ProtoReflect.Descriptor instead.
func (*DeleteExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{32}
}

type UpdateExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Example *ExampleInfo `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *UpdateExampleReq) Reset() {
	*x = UpdateExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExampleReq) ProtoMessage() {}

func (x *UpdateExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExampleReq.ProtoReflect.Descriptor instead.
func (*UpdateExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateExampleReq) GetExample() *ExampleInfo {
	if x != nil {
		return x.Example
	}
	return nil
}

type UpdateExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateExampleResp) Reset() {
	*x = UpdateExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExampleResp) ProtoMessage() {}

func (x *UpdateExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExampleResp.ProtoReflect.Descriptor instead.
func (*UpdateExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{34}
}

type GetExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleId int64 `protobuf:"varint,1,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
}

func (x *GetExampleReq) Reset() {
	*x = GetExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleReq) ProtoMessage() {}

func (x *GetExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleReq.ProtoReflect.Descriptor instead.
func (*GetExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{35}
}

func (x *GetExampleReq) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

type GetExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Example *ExampleInfo `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *GetExampleResp) Reset() {
	*x = GetExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleResp) ProtoMessage() {}

func (x *GetExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleResp.ProtoReflect.Descriptor instead.
func (*GetExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{36}
}

func (x *GetExampleResp) GetExample() *ExampleInfo {
	if x != nil {
		return x.Example
	}
	return nil
}

type GetProblemExamplesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemExamplesReq) Reset() {
	*x = GetProblemExamplesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemExamplesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemExamplesReq) ProtoMessage() {}

func (x *GetProblemExamplesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemExamplesReq.ProtoReflect.Descriptor instead.
func (*GetProblemExamplesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{37}
}

func (x *GetProblemExamplesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemExamplesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examples []*ExampleInfo `protobuf:"bytes,1,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *GetProblemExamplesResp) Reset() {
	*x = GetProblemExamplesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemExamplesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemExamplesResp) ProtoMessage() {}

func (x *GetProblemExamplesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemExamplesResp.ProtoReflect.Descriptor instead.
func (*GetProblemExamplesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{38}
}

func (x *GetProblemExamplesResp) GetExamples() []*ExampleInfo {
	if x != nil {
		return x.Examples
	}
	return nil
}

type HintInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintId    int64  `protobuf:"varint,1,opt,name=hintId,proto3" json:"hintId,omitempty"`
	ProblemId int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Content   string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *HintInfo) Reset() {
	*x = HintInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HintInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HintInfo) ProtoMessage() {}

func (x *HintInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HintInfo.ProtoReflect.Descriptor instead.
func (*HintInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{39}
}

func (x *HintInfo) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

func (x *HintInfo) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *HintInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64  `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AddHintReq) Reset() {
	*x = AddHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHintReq) ProtoMessage() {}

func (x *AddHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHintReq.ProtoReflect.Descriptor instead.
func (*AddHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{40}
}

func (x *AddHintReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddHintReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddHintResp) Reset() {
	*x = AddHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHintResp) ProtoMessage() {}

func (x *AddHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHintResp.ProtoReflect.Descriptor instead.
func (*AddHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{41}
}

func (x *AddHintResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintId int64 `protobuf:"varint,1,opt,name=hintId,proto3" json:"hintId,omitempty"`
}

func (x *DeleteHintReq) Reset() {
	*x = DeleteHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHintReq) ProtoMessage() {}

func (x *DeleteHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHintReq.ProtoReflect.Descriptor instead.
func (*DeleteHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{42}
}

func (x *DeleteHintReq) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

type DeleteHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHintResp) Reset() {
	*x = DeleteHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHintResp) ProtoMessage() {}

func (x *DeleteHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHintResp.ProtoReflect.Descriptor instead.
func (*DeleteHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{43}
}

type UpdateHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hint *HintInfo `protobuf:"bytes,1,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *UpdateHintReq) Reset() {
	*x = UpdateHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHintReq) ProtoMessage() {}

func (x *UpdateHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHintReq.ProtoReflect.Descriptor instead.
func (*UpdateHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{44}
}

func (x *UpdateHintReq) GetHint() *HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type UpdateHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHintResp) Reset() {
	*x = UpdateHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHintResp) ProtoMessage() {}

func (x *UpdateHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHintResp.ProtoReflect.Descriptor instead.
func (*UpdateHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{45}
}

type GetHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintId int64 `protobuf:"varint,1,opt,name=hintId,proto3" json:"hintId,omitempty"`
}

func (x *GetHintReq) Reset() {
	*x = GetHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintReq) ProtoMessage() {}

func (x *GetHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintReq.ProtoReflect.Descriptor instead.
func (*GetHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{46}
}

func (x *GetHintReq) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

type GetHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hint *HintInfo `protobuf:"bytes,1,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *GetHintResp) Reset() {
	*x = GetHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintResp) ProtoMessage() {}

func (x *GetHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintResp.ProtoReflect.Descriptor instead.
func (*GetHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{47}
}

func (x *GetHintResp) GetHint() *HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type GetProblemHintsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemHintsReq) Reset() {
	*x = GetProblemHintsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemHintsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemHintsReq) ProtoMessage() {}

func (x *GetProblemHintsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemHintsReq.ProtoReflect.Descriptor instead.
func (*GetProblemHintsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{48}
}

func (x *GetProblemHintsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemHintsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hint []*HintInfo `protobuf:"bytes,1,rep,name=hint,proto3" json:"hint,omitempty"`
}

func (x *GetProblemHintsResp) Reset() {
	*x = GetProblemHintsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemHintsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemHintsResp) ProtoMessage() {}

func (x *GetProblemHintsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemHintsResp.ProtoReflect.Descriptor instead.
func (*GetProblemHintsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{49}
}

func (x *GetProblemHintsResp) GetHint() []*HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type JudgeDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeDataId int64 `protobuf:"varint,1,opt,name=judgeDataId,proto3" json:"judgeDataId,omitempty"`
	ProblemId   int64 `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	// 输入数据内容
	Input string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	// 输出数据内容
	Output string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *JudgeDataInfo) Reset() {
	*x = JudgeDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeDataInfo) ProtoMessage() {}

func (x *JudgeDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeDataInfo.ProtoReflect.Descriptor instead.
func (*JudgeDataInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{50}
}

func (x *JudgeDataInfo) GetJudgeDataId() int64 {
	if x != nil {
		return x.JudgeDataId
	}
	return 0
}

func (x *JudgeDataInfo) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *JudgeDataInfo) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *JudgeDataInfo) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type AddJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	// 输入数据内容
	Input string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	// 输出数据内容
	Output string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *AddJudgeDataReq) Reset() {
	*x = AddJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeDataReq) ProtoMessage() {}

func (x *AddJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeDataReq.ProtoReflect.Descriptor instead.
func (*AddJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{51}
}

func (x *AddJudgeDataReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddJudgeDataReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AddJudgeDataReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type AddJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddJudgeDataResp) Reset() {
	*x = AddJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeDataResp) ProtoMessage() {}

func (x *AddJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeDataResp.ProtoReflect.Descriptor instead.
func (*AddJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{52}
}

func (x *AddJudgeDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeDataId int64 `protobuf:"varint,1,opt,name=judgeDataId,proto3" json:"judgeDataId,omitempty"`
}

func (x *DeleteJudgeDataReq) Reset() {
	*x = DeleteJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeDataReq) ProtoMessage() {}

func (x *DeleteJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeDataReq.ProtoReflect.Descriptor instead.
func (*DeleteJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteJudgeDataReq) GetJudgeDataId() int64 {
	if x != nil {
		return x.JudgeDataId
	}
	return 0
}

type DeleteJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteJudgeDataResp) Reset() {
	*x = DeleteJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeDataResp) ProtoMessage() {}

func (x *DeleteJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeDataResp.ProtoReflect.Descriptor instead.
func (*DeleteJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{54}
}

type UpdateJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeData *JudgeDataInfo `protobuf:"bytes,1,opt,name=judgeData,proto3" json:"judgeData,omitempty"`
}

func (x *UpdateJudgeDataReq) Reset() {
	*x = UpdateJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeDataReq) ProtoMessage() {}

func (x *UpdateJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeDataReq.ProtoReflect.Descriptor instead.
func (*UpdateJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{55}
}

func (x *UpdateJudgeDataReq) GetJudgeData() *JudgeDataInfo {
	if x != nil {
		return x.JudgeData
	}
	return nil
}

type UpdateJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJudgeDataResp) Reset() {
	*x = UpdateJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeDataResp) ProtoMessage() {}

func (x *UpdateJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeDataResp.ProtoReflect.Descriptor instead.
func (*UpdateJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{56}
}

type GetJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetJudgeDataReq) Reset() {
	*x = GetJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeDataReq) ProtoMessage() {}

func (x *GetJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeDataReq.ProtoReflect.Descriptor instead.
func (*GetJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{57}
}

func (x *GetJudgeDataReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeData []*JudgeDataInfo `protobuf:"bytes,1,rep,name=judgeData,proto3" json:"judgeData,omitempty"`
}

func (x *GetJudgeDataResp) Reset() {
	*x = GetJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeDataResp) ProtoMessage() {}

func (x *GetJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeDataResp.ProtoReflect.Descriptor instead.
func (*GetJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{58}
}

func (x *GetJudgeDataResp) GetJudgeData() []*JudgeDataInfo {
	if x != nil {
		return x.JudgeData
	}
	return nil
}

type LanguageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId int64  `protobuf:"varint,1,opt,name=languageId,proto3" json:"languageId,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LanguageInfo) Reset() {
	*x = LanguageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageInfo) ProtoMessage() {}

func (x *LanguageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageInfo.ProtoReflect.Descriptor instead.
func (*LanguageInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{59}
}

func (x *LanguageInfo) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

func (x *LanguageInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ProblemLanguagesModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId  int64 `protobuf:"varint,1,opt,name=languageId,proto3" json:"languageId,omitempty"`
	TimeLimit   int64 `protobuf:"varint,2,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`
	MemoryLimit int64 `protobuf:"varint,3,opt,name=memoryLimit,proto3" json:"memoryLimit,omitempty"`
}

func (x *ProblemLanguagesModel) Reset() {
	*x = ProblemLanguagesModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemLanguagesModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemLanguagesModel) ProtoMessage() {}

func (x *ProblemLanguagesModel) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemLanguagesModel.ProtoReflect.Descriptor instead.
func (*ProblemLanguagesModel) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{60}
}

func (x *ProblemLanguagesModel) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

func (x *ProblemLanguagesModel) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *ProblemLanguagesModel) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

type AddLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddLanguageReq) Reset() {
	*x = AddLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLanguageReq) ProtoMessage() {}

func (x *AddLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLanguageReq.ProtoReflect.Descriptor instead.
func (*AddLanguageReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{61}
}

func (x *AddLanguageReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddLanguageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddLanguageResp) Reset() {
	*x = AddLanguageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddLanguageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLanguageResp) ProtoMessage() {}

func (x *AddLanguageResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLanguageResp.ProtoReflect.Descriptor instead.
func (*AddLanguageResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{62}
}

func (x *AddLanguageResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId int64 `protobuf:"varint,1,opt,name=languageId,proto3" json:"languageId,omitempty"`
}

func (x *DeleteLanguageReq) Reset() {
	*x = DeleteLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLanguageReq) ProtoMessage() {}

func (x *DeleteLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLanguageReq.ProtoReflect.Descriptor instead.
func (*DeleteLanguageReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{63}
}

func (x *DeleteLanguageReq) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type DeleteLanguageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteLanguageResp) Reset() {
	*x = DeleteLanguageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLanguageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLanguageResp) ProtoMessage() {}

func (x *DeleteLanguageResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLanguageResp.ProtoReflect.Descriptor instead.
func (*DeleteLanguageResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{64}
}

type UpdateLanguageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *LanguageInfo `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *UpdateLanguageReq) Reset() {
	*x = UpdateLanguageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLanguageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageReq) ProtoMessage() {}

func (x *UpdateLanguageReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageReq.ProtoReflect.Descriptor instead.
func (*UpdateLanguageReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{65}
}

func (x *UpdateLanguageReq) GetLanguage() *LanguageInfo {
	if x != nil {
		return x.Language
	}
	return nil
}

type UpdateLanguageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateLanguageResp) Reset() {
	*x = UpdateLanguageResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLanguageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLanguageResp) ProtoMessage() {}

func (x *UpdateLanguageResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLanguageResp.ProtoReflect.Descriptor instead.
func (*UpdateLanguageResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{66}
}

type GetLanguagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetLanguagesReq) Reset() {
	*x = GetLanguagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesReq) ProtoMessage() {}

func (x *GetLanguagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesReq.ProtoReflect.Descriptor instead.
func (*GetLanguagesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{67}
}

type GetLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language []*LanguageInfo `protobuf:"bytes,1,rep,name=language,proto3" json:"language,omitempty"`
}

func (x *GetLanguagesResp) Reset() {
	*x = GetLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesResp) ProtoMessage() {}

func (x *GetLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesResp.ProtoReflect.Descriptor instead.
func (*GetLanguagesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{68}
}

func (x *GetLanguagesResp) GetLanguage() []*LanguageInfo {
	if x != nil {
		return x.Language
	}
	return nil
}

type GetLanguageByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageId int64 `protobuf:"varint,1,opt,name=languageId,proto3" json:"languageId,omitempty"`
}

func (x *GetLanguageByIdReq) Reset() {
	*x = GetLanguageByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageByIdReq) ProtoMessage() {}

func (x *GetLanguageByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageByIdReq.ProtoReflect.Descriptor instead.
func (*GetLanguageByIdReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{69}
}

func (x *GetLanguageByIdReq) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

type GetLanguageByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Language *LanguageInfo `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
}

func (x *GetLanguageByIdResp) Reset() {
	*x = GetLanguageByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageByIdResp) ProtoMessage() {}

func (x *GetLanguageByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageByIdResp.ProtoReflect.Descriptor instead.
func (*GetLanguageByIdResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{70}
}

func (x *GetLanguageByIdResp) GetLanguage() *LanguageInfo {
	if x != nil {
		return x.Language
	}
	return nil
}

type ProblemAddLanguagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	// 数据模型
	Model []*ProblemLanguagesModel `protobuf:"bytes,2,rep,name=model,proto3" json:"model,omitempty"`
}

func (x *ProblemAddLanguagesReq) Reset() {
	*x = ProblemAddLanguagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddLanguagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddLanguagesReq) ProtoMessage() {}

func (x *ProblemAddLanguagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddLanguagesReq.ProtoReflect.Descriptor instead.
func (*ProblemAddLanguagesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{71}
}

func (x *ProblemAddLanguagesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemAddLanguagesReq) GetModel() []*ProblemLanguagesModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type ProblemAddLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemAddLanguagesResp) Reset() {
	*x = ProblemAddLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddLanguagesResp) ProtoMessage() {}

func (x *ProblemAddLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddLanguagesResp.ProtoReflect.Descriptor instead.
func (*ProblemAddLanguagesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{72}
}

type ProblemDeleteLanguagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId   int64   `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
	LanguageIds []int64 `protobuf:"varint,2,rep,packed,name=languageIds,proto3" json:"languageIds,omitempty"`
}

func (x *ProblemDeleteLanguagesReq) Reset() {
	*x = ProblemDeleteLanguagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteLanguagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteLanguagesReq) ProtoMessage() {}

func (x *ProblemDeleteLanguagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteLanguagesReq.ProtoReflect.Descriptor instead.
func (*ProblemDeleteLanguagesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{73}
}

func (x *ProblemDeleteLanguagesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemDeleteLanguagesReq) GetLanguageIds() []int64 {
	if x != nil {
		return x.LanguageIds
	}
	return nil
}

type ProblemDeleteLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemDeleteLanguagesResp) Reset() {
	*x = ProblemDeleteLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteLanguagesResp) ProtoMessage() {}

func (x *ProblemDeleteLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteLanguagesResp.ProtoReflect.Descriptor instead.
func (*ProblemDeleteLanguagesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{74}
}

type GetProblemLanguagesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemLanguagesReq) Reset() {
	*x = GetProblemLanguagesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemLanguagesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemLanguagesReq) ProtoMessage() {}

func (x *GetProblemLanguagesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemLanguagesReq.ProtoReflect.Descriptor instead.
func (*GetProblemLanguagesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{75}
}

func (x *GetProblemLanguagesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 数据模型
	Model []*ProblemLanguagesModel `protobuf:"bytes,1,rep,name=model,proto3" json:"model,omitempty"`
}

func (x *GetProblemLanguagesResp) Reset() {
	*x = GetProblemLanguagesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemLanguagesResp) ProtoMessage() {}

func (x *GetProblemLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemLanguagesResp.ProtoReflect.Descriptor instead.
func (*GetProblemLanguagesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{76}
}

func (x *GetProblemLanguagesResp) GetModel() []*ProblemLanguagesModel {
	if x != nil {
		return x.Model
	}
	return nil
}

type SubmitInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitId          int64         `protobuf:"varint,2,opt,name=submitId,proto3" json:"submitId,omitempty"`
	UserId            int64         `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	ProblemId         int64         `protobuf:"varint,4,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Language          *LanguageInfo `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	Result            uint32        `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Code              string        `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	RunTime           int64         `protobuf:"varint,5,opt,name=runTime,proto3" json:"runTime,omitempty"`
	MemoryConsumption int64         `protobuf:"varint,6,opt,name=memoryConsumption,proto3" json:"memoryConsumption,omitempty"`
}

func (x *SubmitInfo) Reset() {
	*x = SubmitInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitInfo) ProtoMessage() {}

func (x *SubmitInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitInfo.ProtoReflect.Descriptor instead.
func (*SubmitInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{77}
}

func (x *SubmitInfo) GetSubmitId() int64 {
	if x != nil {
		return x.SubmitId
	}
	return 0
}

func (x *SubmitInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SubmitInfo) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *SubmitInfo) GetLanguage() *LanguageInfo {
	if x != nil {
		return x.Language
	}
	return nil
}

func (x *SubmitInfo) GetResult() uint32 {
	if x != nil {
		return x.Result
	}
	return 0
}

func (x *SubmitInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SubmitInfo) GetRunTime() int64 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *SubmitInfo) GetMemoryConsumption() int64 {
	if x != nil {
		return x.MemoryConsumption
	}
	return 0
}

type SubmitCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProblemId  int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	LanguageId int64  `protobuf:"varint,3,opt,name=languageId,proto3" json:"languageId,omitempty"`
	Code       string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SubmitCodeReq) Reset() {
	*x = SubmitCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeReq) ProtoMessage() {}

func (x *SubmitCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeReq.ProtoReflect.Descriptor instead.
func (*SubmitCodeReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{78}
}

func (x *SubmitCodeReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SubmitCodeReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *SubmitCodeReq) GetLanguageId() int64 {
	if x != nil {
		return x.LanguageId
	}
	return 0
}

func (x *SubmitCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SubmitCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitId int64 `protobuf:"varint,1,opt,name=submitId,proto3" json:"submitId,omitempty"`
}

func (x *SubmitCodeResp) Reset() {
	*x = SubmitCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeResp) ProtoMessage() {}

func (x *SubmitCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeResp.ProtoReflect.Descriptor instead.
func (*SubmitCodeResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{79}
}

func (x *SubmitCodeResp) GetSubmitId() int64 {
	if x != nil {
		return x.SubmitId
	}
	return 0
}

type GetProblemSubmitCountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemSubmitCountReq) Reset() {
	*x = GetProblemSubmitCountReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemSubmitCountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemSubmitCountReq) ProtoMessage() {}

func (x *GetProblemSubmitCountReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemSubmitCountReq.ProtoReflect.Descriptor instead.
func (*GetProblemSubmitCountReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{80}
}

func (x *GetProblemSubmitCountReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemSubmitCountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 提交数
	SubmitCount int64 `protobuf:"varint,1,opt,name=submitCount,proto3" json:"submitCount,omitempty"`
	// 通过数
	AcceptCount int64 `protobuf:"varint,2,opt,name=acceptCount,proto3" json:"acceptCount,omitempty"`
}

func (x *GetProblemSubmitCountResp) Reset() {
	*x = GetProblemSubmitCountResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemSubmitCountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemSubmitCountResp) ProtoMessage() {}

func (x *GetProblemSubmitCountResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemSubmitCountResp.ProtoReflect.Descriptor instead.
func (*GetProblemSubmitCountResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{81}
}

func (x *GetProblemSubmitCountResp) GetSubmitCount() int64 {
	if x != nil {
		return x.SubmitCount
	}
	return 0
}

func (x *GetProblemSubmitCountResp) GetAcceptCount() int64 {
	if x != nil {
		return x.AcceptCount
	}
	return 0
}

type GetUserSubmitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PageNum  int32 `protobuf:"varint,2,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32 `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *GetUserSubmitReq) Reset() {
	*x = GetUserSubmitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubmitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubmitReq) ProtoMessage() {}

func (x *GetUserSubmitReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubmitReq.ProtoReflect.Descriptor instead.
func (*GetUserSubmitReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{82}
}

func (x *GetUserSubmitReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserSubmitReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *GetUserSubmitReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetUserSubmitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submits []*SubmitInfo `protobuf:"bytes,1,rep,name=submits,proto3" json:"submits,omitempty"`
	// 总记录数
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GetUserSubmitResp) Reset() {
	*x = GetUserSubmitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSubmitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSubmitResp) ProtoMessage() {}

func (x *GetUserSubmitResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSubmitResp.ProtoReflect.Descriptor instead.
func (*GetUserSubmitResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{83}
}

func (x *GetUserSubmitResp) GetSubmits() []*SubmitInfo {
	if x != nil {
		return x.Submits
	}
	return nil
}

func (x *GetUserSubmitResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetUserProblemSubmitReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	ProblemId int64 `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetUserProblemSubmitReq) Reset() {
	*x = GetUserProblemSubmitReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProblemSubmitReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProblemSubmitReq) ProtoMessage() {}

func (x *GetUserProblemSubmitReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProblemSubmitReq.ProtoReflect.Descriptor instead.
func (*GetUserProblemSubmitReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{84}
}

func (x *GetUserProblemSubmitReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserProblemSubmitReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetUserProblemSubmitResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submits []*SubmitInfo `protobuf:"bytes,1,rep,name=submits,proto3" json:"submits,omitempty"`
}

func (x *GetUserProblemSubmitResp) Reset() {
	*x = GetUserProblemSubmitResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserProblemSubmitResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserProblemSubmitResp) ProtoMessage() {}

func (x *GetUserProblemSubmitResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserProblemSubmitResp.ProtoReflect.Descriptor instead.
func (*GetUserProblemSubmitResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{85}
}

func (x *GetUserProblemSubmitResp) GetSubmits() []*SubmitInfo {
	if x != nil {
		return x.Submits
	}
	return nil
}

type GetSubmitByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmitId int64 `protobuf:"varint,1,opt,name=submitId,proto3" json:"submitId,omitempty"`
}

func (x *GetSubmitByIdReq) Reset() {
	*x = GetSubmitByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitByIdReq) ProtoMessage() {}

func (x *GetSubmitByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitByIdReq.ProtoReflect.Descriptor instead.
func (*GetSubmitByIdReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{86}
}

func (x *GetSubmitByIdReq) GetSubmitId() int64 {
	if x != nil {
		return x.SubmitId
	}
	return 0
}

type GetSubmitByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Submit *SubmitInfo `protobuf:"bytes,1,opt,name=submit,proto3" json:"submit,omitempty"`
}

func (x *GetSubmitByIdResp) Reset() {
	*x = GetSubmitByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubmitByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubmitByIdResp) ProtoMessage() {}

func (x *GetSubmitByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubmitByIdResp.ProtoReflect.Descriptor instead.
func (*GetSubmitByIdResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{87}
}

func (x *GetSubmitByIdResp) GetSubmit() *SubmitInfo {
	if x != nil {
		return x.Submit
	}
	return nil
}

var File_problemset_proto protoreflect.FileDescriptor

var file_problemset_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x22, 0x89,
	0x02, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xed, 0x01, 0x0a, 0x0d, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x41, 0x64,
	0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x13,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4a, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x22, 0x13, 0x0a, 0x11,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x22, 0xa4, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x1f, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1c, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x24, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x28, 0x0a, 0x10, 0x4d, 0x75, 0x73,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x75, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x38, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x0f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x0f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x22, 0x33, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x22, 0x49, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x22,
	0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4c, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x99,
	0x01, 0x0a, 0x0b, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7d, 0x0a, 0x0d, 0x41, 0x64,
	0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x41, 0x64, 0x64,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x10, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x13, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x45, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x31, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x45, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x08, 0x48, 0x69, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x22, 0x44, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64,
	0x64, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x39, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x22,
	0x10, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x24, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74,
	0x22, 0x32, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x68,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0x7d, 0x0a, 0x0d, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6a, 0x75, 0x64,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x22, 0x5d, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22,
	0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a, 0x09,
	0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4b, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x42, 0x0a, 0x0c, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x77,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x24, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x21, 0x0a,
	0x0f, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x33, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x49, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x11, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22,
	0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x34, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x22, 0x6f, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x19, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x5b, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x36, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x88, 0x02, 0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64,
	0x12, 0x34, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x79, 0x0a, 0x0d, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x2c, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x5f, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x60,
	0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x5b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4f, 0x0a,
	0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4c,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x2e, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x32, 0x98, 0x03, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x45, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x28, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x5a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x4e,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x28, 0x01, 0x12, 0x4c,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd1, 0x04, 0x0a,
	0x03, 0x54, 0x61, 0x67, 0x12, 0x37, 0x0a, 0x06, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x12, 0x15,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4c, 0x0a, 0x0d, 0x4d, 0x75, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4d, 0x75,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4d, 0x75, 0x73, 0x74,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x40, 0x0a,
	0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x12, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41,
	0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67,
	0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x32, 0x94, 0x03, 0x0a, 0x07, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x28, 0x01, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x28,
	0x01, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x5d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x32, 0xe4, 0x02, 0x0a, 0x04, 0x48, 0x69, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x28, 0x01, 0x12, 0x43,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e,
	0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x28, 0x01, 0x12, 0x3c, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x54, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x32, 0xcf,
	0x02, 0x0a, 0x09, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a, 0x0c,
	0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64,
	0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x28, 0x01, 0x12, 0x52, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x54, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x28, 0x01, 0x12, 0x4b, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01,
	0x32, 0xbc, 0x05, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x0b, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73,
	0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5e, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x67, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32,
	0xba, 0x03, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x28,
	0x01, 0x12, 0x64, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x63, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x30, 0x01, 0x42, 0x0e, 0x5a, 0x0c,
	0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_problemset_proto_rawDescOnce sync.Once
	file_problemset_proto_rawDescData = file_problemset_proto_rawDesc
)

func file_problemset_proto_rawDescGZIP() []byte {
	file_problemset_proto_rawDescOnce.Do(func() {
		file_problemset_proto_rawDescData = protoimpl.X.CompressGZIP(file_problemset_proto_rawDescData)
	})
	return file_problemset_proto_rawDescData
}

var file_problemset_proto_msgTypes = make([]protoimpl.MessageInfo, 88)
var file_problemset_proto_goTypes = []any{
	(*ProblemInfo)(nil),                // 0: problemset.ProblemInfo
	(*AddProblemReq)(nil),              // 1: problemset.AddProblemReq
	(*AddProblemResp)(nil),             // 2: problemset.AddProblemResp
	(*DeleteProblemReq)(nil),           // 3: problemset.DeleteProblemReq
	(*DeleteProblemResp)(nil),          // 4: problemset.DeleteProblemResp
	(*GetProblemContentReq)(nil),       // 5: problemset.GetProblemContentReq
	(*GetProblemContentResp)(nil),      // 6: problemset.GetProblemContentResp
	(*UpdateProblemReq)(nil),           // 7: problemset.UpdateProblemReq
	(*UpdateProblemResp)(nil),          // 8: problemset.UpdateProblemResp
	(*SearchProblemReq)(nil),           // 9: problemset.SearchProblemReq
	(*SearchProblemResp)(nil),          // 10: problemset.SearchProblemResp
	(*AddTagReq)(nil),                  // 11: problemset.AddTagReq
	(*AddTagResp)(nil),                 // 12: problemset.AddTagResp
	(*DeleteTagReq)(nil),               // 13: problemset.DeleteTagReq
	(*DeleteTagResp)(nil),              // 14: problemset.DeleteTagResp
	(*MustDeleteTagReq)(nil),           // 15: problemset.MustDeleteTagReq
	(*MustDeleteTagResp)(nil),          // 16: problemset.MustDeleteTagResp
	(*UpdateTagReq)(nil),               // 17: problemset.UpdateTagReq
	(*UpdateTagResp)(nil),              // 18: problemset.UpdateTagResp
	(*GetAllTagsReq)(nil),              // 19: problemset.GetAllTagsReq
	(*TagInfo)(nil),                    // 20: problemset.TagInfo
	(*GetAllTagsResp)(nil),             // 21: problemset.GetAllTagsResp
	(*ProblemAddTagsReq)(nil),          // 22: problemset.ProblemAddTagsReq
	(*ProblemAddTagsResp)(nil),         // 23: problemset.ProblemAddTagsResp
	(*ProblemDeleteTagsReq)(nil),       // 24: problemset.ProblemDeleteTagsReq
	(*ProblemDeleteTagsResp)(nil),      // 25: problemset.ProblemDeleteTagsResp
	(*GetProblemTagsReq)(nil),          // 26: problemset.GetProblemTagsReq
	(*GetProblemTagsResp)(nil),         // 27: problemset.GetProblemTagsResp
	(*ExampleInfo)(nil),                // 28: problemset.ExampleInfo
	(*AddExampleReq)(nil),              // 29: problemset.AddExampleReq
	(*AddExampleResp)(nil),             // 30: problemset.AddExampleResp
	(*DeleteExampleReq)(nil),           // 31: problemset.DeleteExampleReq
	(*DeleteExampleResp)(nil),          // 32: problemset.DeleteExampleResp
	(*UpdateExampleReq)(nil),           // 33: problemset.UpdateExampleReq
	(*UpdateExampleResp)(nil),          // 34: problemset.UpdateExampleResp
	(*GetExampleReq)(nil),              // 35: problemset.GetExampleReq
	(*GetExampleResp)(nil),             // 36: problemset.GetExampleResp
	(*GetProblemExamplesReq)(nil),      // 37: problemset.GetProblemExamplesReq
	(*GetProblemExamplesResp)(nil),     // 38: problemset.GetProblemExamplesResp
	(*HintInfo)(nil),                   // 39: problemset.HintInfo
	(*AddHintReq)(nil),                 // 40: problemset.AddHintReq
	(*AddHintResp)(nil),                // 41: problemset.AddHintResp
	(*DeleteHintReq)(nil),              // 42: problemset.DeleteHintReq
	(*DeleteHintResp)(nil),             // 43: problemset.DeleteHintResp
	(*UpdateHintReq)(nil),              // 44: problemset.UpdateHintReq
	(*UpdateHintResp)(nil),             // 45: problemset.UpdateHintResp
	(*GetHintReq)(nil),                 // 46: problemset.GetHintReq
	(*GetHintResp)(nil),                // 47: problemset.GetHintResp
	(*GetProblemHintsReq)(nil),         // 48: problemset.GetProblemHintsReq
	(*GetProblemHintsResp)(nil),        // 49: problemset.GetProblemHintsResp
	(*JudgeDataInfo)(nil),              // 50: problemset.JudgeDataInfo
	(*AddJudgeDataReq)(nil),            // 51: problemset.AddJudgeDataReq
	(*AddJudgeDataResp)(nil),           // 52: problemset.AddJudgeDataResp
	(*DeleteJudgeDataReq)(nil),         // 53: problemset.DeleteJudgeDataReq
	(*DeleteJudgeDataResp)(nil),        // 54: problemset.DeleteJudgeDataResp
	(*UpdateJudgeDataReq)(nil),         // 55: problemset.UpdateJudgeDataReq
	(*UpdateJudgeDataResp)(nil),        // 56: problemset.UpdateJudgeDataResp
	(*GetJudgeDataReq)(nil),            // 57: problemset.GetJudgeDataReq
	(*GetJudgeDataResp)(nil),           // 58: problemset.GetJudgeDataResp
	(*LanguageInfo)(nil),               // 59: problemset.LanguageInfo
	(*ProblemLanguagesModel)(nil),      // 60: problemset.ProblemLanguagesModel
	(*AddLanguageReq)(nil),             // 61: problemset.AddLanguageReq
	(*AddLanguageResp)(nil),            // 62: problemset.AddLanguageResp
	(*DeleteLanguageReq)(nil),          // 63: problemset.DeleteLanguageReq
	(*DeleteLanguageResp)(nil),         // 64: problemset.DeleteLanguageResp
	(*UpdateLanguageReq)(nil),          // 65: problemset.UpdateLanguageReq
	(*UpdateLanguageResp)(nil),         // 66: problemset.UpdateLanguageResp
	(*GetLanguagesReq)(nil),            // 67: problemset.GetLanguagesReq
	(*GetLanguagesResp)(nil),           // 68: problemset.GetLanguagesResp
	(*GetLanguageByIdReq)(nil),         // 69: problemset.GetLanguageByIdReq
	(*GetLanguageByIdResp)(nil),        // 70: problemset.GetLanguageByIdResp
	(*ProblemAddLanguagesReq)(nil),     // 71: problemset.ProblemAddLanguagesReq
	(*ProblemAddLanguagesResp)(nil),    // 72: problemset.ProblemAddLanguagesResp
	(*ProblemDeleteLanguagesReq)(nil),  // 73: problemset.ProblemDeleteLanguagesReq
	(*ProblemDeleteLanguagesResp)(nil), // 74: problemset.ProblemDeleteLanguagesResp
	(*GetProblemLanguagesReq)(nil),     // 75: problemset.GetProblemLanguagesReq
	(*GetProblemLanguagesResp)(nil),    // 76: problemset.GetProblemLanguagesResp
	(*SubmitInfo)(nil),                 // 77: problemset.SubmitInfo
	(*SubmitCodeReq)(nil),              // 78: problemset.SubmitCodeReq
	(*SubmitCodeResp)(nil),             // 79: problemset.SubmitCodeResp
	(*GetProblemSubmitCountReq)(nil),   // 80: problemset.GetProblemSubmitCountReq
	(*GetProblemSubmitCountResp)(nil),  // 81: problemset.GetProblemSubmitCountResp
	(*GetUserSubmitReq)(nil),           // 82: problemset.GetUserSubmitReq
	(*GetUserSubmitResp)(nil),          // 83: problemset.GetUserSubmitResp
	(*GetUserProblemSubmitReq)(nil),    // 84: problemset.GetUserProblemSubmitReq
	(*GetUserProblemSubmitResp)(nil),   // 85: problemset.GetUserProblemSubmitResp
	(*GetSubmitByIdReq)(nil),           // 86: problemset.GetSubmitByIdReq
	(*GetSubmitByIdResp)(nil),          // 87: problemset.GetSubmitByIdResp
}
var file_problemset_proto_depIdxs = []int32{
	0,  // 0: problemset.GetProblemContentResp.problem:type_name -> problemset.ProblemInfo
	0,  // 1: problemset.UpdateProblemReq.problem:type_name -> problemset.ProblemInfo
	20, // 2: problemset.GetAllTagsResp.tags:type_name -> problemset.TagInfo
	20, // 3: problemset.GetProblemTagsResp.tags:type_name -> problemset.TagInfo
	28, // 4: problemset.UpdateExampleReq.example:type_name -> problemset.ExampleInfo
	28, // 5: problemset.GetExampleResp.example:type_name -> problemset.ExampleInfo
	28, // 6: problemset.GetProblemExamplesResp.examples:type_name -> problemset.ExampleInfo
	39, // 7: problemset.UpdateHintReq.hint:type_name -> problemset.HintInfo
	39, // 8: problemset.GetHintResp.hint:type_name -> problemset.HintInfo
	39, // 9: problemset.GetProblemHintsResp.hint:type_name -> problemset.HintInfo
	50, // 10: problemset.UpdateJudgeDataReq.judgeData:type_name -> problemset.JudgeDataInfo
	50, // 11: problemset.GetJudgeDataResp.judgeData:type_name -> problemset.JudgeDataInfo
	59, // 12: problemset.UpdateLanguageReq.language:type_name -> problemset.LanguageInfo
	59, // 13: problemset.GetLanguagesResp.language:type_name -> problemset.LanguageInfo
	59, // 14: problemset.GetLanguageByIdResp.language:type_name -> problemset.LanguageInfo
	60, // 15: problemset.ProblemAddLanguagesReq.model:type_name -> problemset.ProblemLanguagesModel
	60, // 16: problemset.GetProblemLanguagesResp.model:type_name -> problemset.ProblemLanguagesModel
	59, // 17: problemset.SubmitInfo.language:type_name -> problemset.LanguageInfo
	77, // 18: problemset.GetUserSubmitResp.submits:type_name -> problemset.SubmitInfo
	77, // 19: problemset.GetUserProblemSubmitResp.submits:type_name -> problemset.SubmitInfo
	77, // 20: problemset.GetSubmitByIdResp.submit:type_name -> problemset.SubmitInfo
	1,  // 21: problemset.Problem.AddProblem:input_type -> problemset.AddProblemReq
	3,  // 22: problemset.Problem.DeleteProblem:input_type -> problemset.DeleteProblemReq
	5,  // 23: problemset.Problem.GetProblemContent:input_type -> problemset.GetProblemContentReq
	7,  // 24: problemset.Problem.UpdateProblem:input_type -> problemset.UpdateProblemReq
	9,  // 25: problemset.Problem.SearchProblem:input_type -> problemset.SearchProblemReq
	11, // 26: problemset.Tag.AddTag:input_type -> problemset.AddTagReq
	13, // 27: problemset.Tag.DeleteTag:input_type -> problemset.DeleteTagReq
	15, // 28: problemset.Tag.MustDeleteTag:input_type -> problemset.MustDeleteTagReq
	17, // 29: problemset.Tag.UpdateTag:input_type -> problemset.UpdateTagReq
	19, // 30: problemset.Tag.GetAllTags:input_type -> problemset.GetAllTagsReq
	22, // 31: problemset.Tag.ProblemAddTags:input_type -> problemset.ProblemAddTagsReq
	24, // 32: problemset.Tag.ProblemDeleteTags:input_type -> problemset.ProblemDeleteTagsReq
	26, // 33: problemset.Tag.GetProblemTags:input_type -> problemset.GetProblemTagsReq
	29, // 34: problemset.Example.AddExample:input_type -> problemset.AddExampleReq
	31, // 35: problemset.Example.DeleteExample:input_type -> problemset.DeleteExampleReq
	33, // 36: problemset.Example.UpdateExample:input_type -> problemset.UpdateExampleReq
	35, // 37: problemset.Example.GetExample:input_type -> problemset.GetExampleReq
	37, // 38: problemset.Example.GetProblemExamples:input_type -> problemset.GetProblemExamplesReq
	40, // 39: problemset.Hint.AddHint:input_type -> problemset.AddHintReq
	42, // 40: problemset.Hint.DeleteHint:input_type -> problemset.DeleteHintReq
	44, // 41: problemset.Hint.UpdateHint:input_type -> problemset.UpdateHintReq
	46, // 42: problemset.Hint.GetHint:input_type -> problemset.GetHintReq
	48, // 43: problemset.Hint.GetProblemHints:input_type -> problemset.GetProblemHintsReq
	51, // 44: problemset.JudgeData.AddJudgeData:input_type -> problemset.AddJudgeDataReq
	53, // 45: problemset.JudgeData.DeleteJudgeData:input_type -> problemset.DeleteJudgeDataReq
	55, // 46: problemset.JudgeData.UpdateJudgeData:input_type -> problemset.UpdateJudgeDataReq
	57, // 47: problemset.JudgeData.GetJudgeData:input_type -> problemset.GetJudgeDataReq
	61, // 48: problemset.Language.AddLanguage:input_type -> problemset.AddLanguageReq
	63, // 49: problemset.Language.DeleteLanguage:input_type -> problemset.DeleteLanguageReq
	65, // 50: problemset.Language.UpdateLanguage:input_type -> problemset.UpdateLanguageReq
	67, // 51: problemset.Language.GetLanguages:input_type -> problemset.GetLanguagesReq
	69, // 52: problemset.Language.GetLanguageById:input_type -> problemset.GetLanguageByIdReq
	71, // 53: problemset.Language.ProblemAddLanguages:input_type -> problemset.ProblemAddLanguagesReq
	73, // 54: problemset.Language.ProblemDeleteLanguages:input_type -> problemset.ProblemDeleteLanguagesReq
	75, // 55: problemset.Language.GetProblemLanguages:input_type -> problemset.GetProblemLanguagesReq
	78, // 56: problemset.Submit.SubmitCode:input_type -> problemset.SubmitCodeReq
	80, // 57: problemset.Submit.GetProblemSubmitCount:input_type -> problemset.GetProblemSubmitCountReq
	82, // 58: problemset.Submit.GetUserSubmit:input_type -> problemset.GetUserSubmitReq
	84, // 59: problemset.Submit.GetUserProblemSubmit:input_type -> problemset.GetUserProblemSubmitReq
	86, // 60: problemset.Submit.GetSubmitById:input_type -> problemset.GetSubmitByIdReq
	2,  // 61: problemset.Problem.AddProblem:output_type -> problemset.AddProblemResp
	4,  // 62: problemset.Problem.DeleteProblem:output_type -> problemset.DeleteProblemResp
	6,  // 63: problemset.Problem.GetProblemContent:output_type -> problemset.GetProblemContentResp
	8,  // 64: problemset.Problem.UpdateProblem:output_type -> problemset.UpdateProblemResp
	10, // 65: problemset.Problem.SearchProblem:output_type -> problemset.SearchProblemResp
	12, // 66: problemset.Tag.AddTag:output_type -> problemset.AddTagResp
	14, // 67: problemset.Tag.DeleteTag:output_type -> problemset.DeleteTagResp
	16, // 68: problemset.Tag.MustDeleteTag:output_type -> problemset.MustDeleteTagResp
	18, // 69: problemset.Tag.UpdateTag:output_type -> problemset.UpdateTagResp
	21, // 70: problemset.Tag.GetAllTags:output_type -> problemset.GetAllTagsResp
	23, // 71: problemset.Tag.ProblemAddTags:output_type -> problemset.ProblemAddTagsResp
	25, // 72: problemset.Tag.ProblemDeleteTags:output_type -> problemset.ProblemDeleteTagsResp
	27, // 73: problemset.Tag.GetProblemTags:output_type -> problemset.GetProblemTagsResp
	30, // 74: problemset.Example.AddExample:output_type -> problemset.AddExampleResp
	32, // 75: problemset.Example.DeleteExample:output_type -> problemset.DeleteExampleResp
	34, // 76: problemset.Example.UpdateExample:output_type -> problemset.UpdateExampleResp
	36, // 77: problemset.Example.GetExample:output_type -> problemset.GetExampleResp
	38, // 78: problemset.Example.GetProblemExamples:output_type -> problemset.GetProblemExamplesResp
	41, // 79: problemset.Hint.AddHint:output_type -> problemset.AddHintResp
	43, // 80: problemset.Hint.DeleteHint:output_type -> problemset.DeleteHintResp
	45, // 81: problemset.Hint.UpdateHint:output_type -> problemset.UpdateHintResp
	47, // 82: problemset.Hint.GetHint:output_type -> problemset.GetHintResp
	49, // 83: problemset.Hint.GetProblemHints:output_type -> problemset.GetProblemHintsResp
	52, // 84: problemset.JudgeData.AddJudgeData:output_type -> problemset.AddJudgeDataResp
	54, // 85: problemset.JudgeData.DeleteJudgeData:output_type -> problemset.DeleteJudgeDataResp
	56, // 86: problemset.JudgeData.UpdateJudgeData:output_type -> problemset.UpdateJudgeDataResp
	58, // 87: problemset.JudgeData.GetJudgeData:output_type -> problemset.GetJudgeDataResp
	62, // 88: problemset.Language.AddLanguage:output_type -> problemset.AddLanguageResp
	64, // 89: problemset.Language.DeleteLanguage:output_type -> problemset.DeleteLanguageResp
	66, // 90: problemset.Language.UpdateLanguage:output_type -> problemset.UpdateLanguageResp
	68, // 91: problemset.Language.GetLanguages:output_type -> problemset.GetLanguagesResp
	70, // 92: problemset.Language.GetLanguageById:output_type -> problemset.GetLanguageByIdResp
	72, // 93: problemset.Language.ProblemAddLanguages:output_type -> problemset.ProblemAddLanguagesResp
	74, // 94: problemset.Language.ProblemDeleteLanguages:output_type -> problemset.ProblemDeleteLanguagesResp
	76, // 95: problemset.Language.GetProblemLanguages:output_type -> problemset.GetProblemLanguagesResp
	79, // 96: problemset.Submit.SubmitCode:output_type -> problemset.SubmitCodeResp
	81, // 97: problemset.Submit.GetProblemSubmitCount:output_type -> problemset.GetProblemSubmitCountResp
	83, // 98: problemset.Submit.GetUserSubmit:output_type -> problemset.GetUserSubmitResp
	85, // 99: problemset.Submit.GetUserProblemSubmit:output_type -> problemset.GetUserProblemSubmitResp
	87, // 100: problemset.Submit.GetSubmitById:output_type -> problemset.GetSubmitByIdResp
	61, // [61:101] is the sub-list for method output_type
	21, // [21:61] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_problemset_proto_init() }
func file_problemset_proto_init() {
	if File_problemset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_problemset_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*MustDeleteTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*MustDeleteTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*TagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*ExampleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AddExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*AddExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemExamplesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemExamplesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*HintInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*AddHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*AddHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GetHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GetHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemHintsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemHintsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*JudgeDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*LanguageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemLanguagesModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*AddLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*AddLanguageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteLanguageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateLanguageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateLanguageResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguageByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguageByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddLanguagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteLanguagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemLanguagesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemLanguagesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[77].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[78].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[79].Exporter = func(v any, i int) any {
			switch v := v.(*SubmitCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[80].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemSubmitCountReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[81].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemSubmitCountResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[82].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSubmitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[83].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSubmitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[84].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserProblemSubmitReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[85].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserProblemSubmitResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[86].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubmitByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[87].Exporter = func(v any, i int) any {
			switch v := v.(*GetSubmitByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_problemset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   88,
			NumExtensions: 0,
			NumServices:   7,
		},
		GoTypes:           file_problemset_proto_goTypes,
		DependencyIndexes: file_problemset_proto_depIdxs,
		MessageInfos:      file_problemset_proto_msgTypes,
	}.Build()
	File_problemset_proto = out.File
	file_problemset_proto_rawDesc = nil
	file_problemset_proto_goTypes = nil
	file_problemset_proto_depIdxs = nil
}
