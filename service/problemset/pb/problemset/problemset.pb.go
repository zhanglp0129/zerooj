// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: problemset.proto

package problemset

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者id，用于鉴权
	OperatorId        int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	Title             string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Difficulty        uint32 `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Description       string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	InputDescription  string `protobuf:"bytes,5,opt,name=inputDescription,proto3" json:"inputDescription,omitempty"`
	OutputDescription string `protobuf:"bytes,6,opt,name=outputDescription,proto3" json:"outputDescription,omitempty"`
	ScaleDescription  string `protobuf:"bytes,7,opt,name=scaleDescription,proto3" json:"scaleDescription,omitempty"`
	TimeLimit         int64  `protobuf:"varint,8,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`
	MemoryLimit       int64  `protobuf:"varint,9,opt,name=memoryLimit,proto3" json:"memoryLimit,omitempty"`
}

func (x *AddProblemReq) Reset() {
	*x = AddProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemReq) ProtoMessage() {}

func (x *AddProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemReq.ProtoReflect.Descriptor instead.
func (*AddProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{0}
}

func (x *AddProblemReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddProblemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddProblemReq) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *AddProblemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddProblemReq) GetInputDescription() string {
	if x != nil {
		return x.InputDescription
	}
	return ""
}

func (x *AddProblemReq) GetOutputDescription() string {
	if x != nil {
		return x.OutputDescription
	}
	return ""
}

func (x *AddProblemReq) GetScaleDescription() string {
	if x != nil {
		return x.ScaleDescription
	}
	return ""
}

func (x *AddProblemReq) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *AddProblemReq) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

type AddProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddProblemResp) Reset() {
	*x = AddProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProblemResp) ProtoMessage() {}

func (x *AddProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProblemResp.ProtoReflect.Descriptor instead.
func (*AddProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{1}
}

func (x *AddProblemResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId  int64 `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *DeleteProblemReq) Reset() {
	*x = DeleteProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemReq) ProtoMessage() {}

func (x *DeleteProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemReq.ProtoReflect.Descriptor instead.
func (*DeleteProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteProblemReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeleteProblemReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type DeleteProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProblemResp) Reset() {
	*x = DeleteProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProblemResp) ProtoMessage() {}

func (x *DeleteProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProblemResp.ProtoReflect.Descriptor instead.
func (*DeleteProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{3}
}

type GetProblemContentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemContentReq) Reset() {
	*x = GetProblemContentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemContentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemContentReq) ProtoMessage() {}

func (x *GetProblemContentReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemContentReq.ProtoReflect.Descriptor instead.
func (*GetProblemContentReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{4}
}

func (x *GetProblemContentReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemContentResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title             string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Difficulty        uint32 `protobuf:"varint,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Description       string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	InputDescription  string `protobuf:"bytes,4,opt,name=inputDescription,proto3" json:"inputDescription,omitempty"`
	OutputDescription string `protobuf:"bytes,5,opt,name=outputDescription,proto3" json:"outputDescription,omitempty"`
	ScaleDescription  string `protobuf:"bytes,6,opt,name=scaleDescription,proto3" json:"scaleDescription,omitempty"`
	TimeLimit         int64  `protobuf:"varint,7,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`
	MemoryLimit       int64  `protobuf:"varint,8,opt,name=memoryLimit,proto3" json:"memoryLimit,omitempty"`
}

func (x *GetProblemContentResp) Reset() {
	*x = GetProblemContentResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemContentResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemContentResp) ProtoMessage() {}

func (x *GetProblemContentResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemContentResp.ProtoReflect.Descriptor instead.
func (*GetProblemContentResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{5}
}

func (x *GetProblemContentResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetProblemContentResp) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *GetProblemContentResp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetProblemContentResp) GetInputDescription() string {
	if x != nil {
		return x.InputDescription
	}
	return ""
}

func (x *GetProblemContentResp) GetOutputDescription() string {
	if x != nil {
		return x.OutputDescription
	}
	return ""
}

func (x *GetProblemContentResp) GetScaleDescription() string {
	if x != nil {
		return x.ScaleDescription
	}
	return ""
}

func (x *GetProblemContentResp) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *GetProblemContentResp) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

type UpdateProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId        int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId         int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Difficulty        uint32 `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	Description       string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	InputDescription  string `protobuf:"bytes,5,opt,name=inputDescription,proto3" json:"inputDescription,omitempty"`
	OutputDescription string `protobuf:"bytes,6,opt,name=outputDescription,proto3" json:"outputDescription,omitempty"`
	ScaleDescription  string `protobuf:"bytes,7,opt,name=scaleDescription,proto3" json:"scaleDescription,omitempty"`
	TimeLimit         int64  `protobuf:"varint,8,opt,name=timeLimit,proto3" json:"timeLimit,omitempty"`
	MemoryLimit       int64  `protobuf:"varint,9,opt,name=memoryLimit,proto3" json:"memoryLimit,omitempty"`
}

func (x *UpdateProblemReq) Reset() {
	*x = UpdateProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemReq) ProtoMessage() {}

func (x *UpdateProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemReq.ProtoReflect.Descriptor instead.
func (*UpdateProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateProblemReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateProblemReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *UpdateProblemReq) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *UpdateProblemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProblemReq) GetInputDescription() string {
	if x != nil {
		return x.InputDescription
	}
	return ""
}

func (x *UpdateProblemReq) GetOutputDescription() string {
	if x != nil {
		return x.OutputDescription
	}
	return ""
}

func (x *UpdateProblemReq) GetScaleDescription() string {
	if x != nil {
		return x.ScaleDescription
	}
	return ""
}

func (x *UpdateProblemReq) GetTimeLimit() int64 {
	if x != nil {
		return x.TimeLimit
	}
	return 0
}

func (x *UpdateProblemReq) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

type UpdateProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProblemResp) Reset() {
	*x = UpdateProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProblemResp) ProtoMessage() {}

func (x *UpdateProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProblemResp.ProtoReflect.Descriptor instead.
func (*UpdateProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{7}
}

type SearchProblemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemName string  `protobuf:"bytes,1,opt,name=problemName,proto3" json:"problemName,omitempty"`
	TagIds      []int64 `protobuf:"varint,2,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
	Difficulty  uint32  `protobuf:"varint,3,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	// 用户id，用于判断题目的状态
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	// 只有当userId!=0时，状态才有效
	Status   uint32 `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	PageNum  int32  `protobuf:"varint,6,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	PageSize int32  `protobuf:"varint,7,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *SearchProblemReq) Reset() {
	*x = SearchProblemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemReq) ProtoMessage() {}

func (x *SearchProblemReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemReq.ProtoReflect.Descriptor instead.
func (*SearchProblemReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{8}
}

func (x *SearchProblemReq) GetProblemName() string {
	if x != nil {
		return x.ProblemName
	}
	return ""
}

func (x *SearchProblemReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *SearchProblemReq) GetDifficulty() uint32 {
	if x != nil {
		return x.Difficulty
	}
	return 0
}

func (x *SearchProblemReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchProblemReq) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SearchProblemReq) GetPageNum() int32 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *SearchProblemReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type SearchProblemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemIds []int64 `protobuf:"varint,1,rep,packed,name=problemIds,proto3" json:"problemIds,omitempty"`
	Count      int64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *SearchProblemResp) Reset() {
	*x = SearchProblemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchProblemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchProblemResp) ProtoMessage() {}

func (x *SearchProblemResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchProblemResp.ProtoReflect.Descriptor instead.
func (*SearchProblemResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{9}
}

func (x *SearchProblemResp) GetProblemIds() []int64 {
	if x != nil {
		return x.ProblemIds
	}
	return nil
}

func (x *SearchProblemResp) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type AddTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AddTagsReq) Reset() {
	*x = AddTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsReq) ProtoMessage() {}

func (x *AddTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsReq.ProtoReflect.Descriptor instead.
func (*AddTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{10}
}

func (x *AddTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddTagsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type AddTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddTagsResp) Reset() {
	*x = AddTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTagsResp) ProtoMessage() {}

func (x *AddTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTagsResp.ProtoReflect.Descriptor instead.
func (*AddTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{11}
}

func (x *AddTagsResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	TagId      int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *DeleteTagsReq) Reset() {
	*x = DeleteTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagsReq) ProtoMessage() {}

func (x *DeleteTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagsReq.ProtoReflect.Descriptor instead.
func (*DeleteTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeleteTagsReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type DeleteTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteTagsResp) Reset() {
	*x = DeleteTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTagsResp) ProtoMessage() {}

func (x *DeleteTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTagsResp.ProtoReflect.Descriptor instead.
func (*DeleteTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{13}
}

type MustDeleteTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	TagId      int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *MustDeleteTagsReq) Reset() {
	*x = MustDeleteTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MustDeleteTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MustDeleteTagsReq) ProtoMessage() {}

func (x *MustDeleteTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MustDeleteTagsReq.ProtoReflect.Descriptor instead.
func (*MustDeleteTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{14}
}

func (x *MustDeleteTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *MustDeleteTagsReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type MustDeleteTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MustDeleteTagsResp) Reset() {
	*x = MustDeleteTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MustDeleteTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MustDeleteTagsResp) ProtoMessage() {}

func (x *MustDeleteTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MustDeleteTagsResp.ProtoReflect.Descriptor instead.
func (*MustDeleteTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{15}
}

type UpdateTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	TagId      int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	// 修改后标签名字
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateTagsReq) Reset() {
	*x = UpdateTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagsReq) ProtoMessage() {}

func (x *UpdateTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagsReq.ProtoReflect.Descriptor instead.
func (*UpdateTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateTagsReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *UpdateTagsReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type UpdateTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTagsResp) Reset() {
	*x = UpdateTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTagsResp) ProtoMessage() {}

func (x *UpdateTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTagsResp.ProtoReflect.Descriptor instead.
func (*UpdateTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{17}
}

type GetAllTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllTagsReq) Reset() {
	*x = GetAllTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsReq) ProtoMessage() {}

func (x *GetAllTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsReq.ProtoReflect.Descriptor instead.
func (*GetAllTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{18}
}

// 标签信息
type TagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *TagInfo) Reset() {
	*x = TagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagInfo) ProtoMessage() {}

func (x *TagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagInfo.ProtoReflect.Descriptor instead.
func (*TagInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{19}
}

func (x *TagInfo) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *TagInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*TagInfo `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetAllTagsResp) Reset() {
	*x = GetAllTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllTagsResp) ProtoMessage() {}

func (x *GetAllTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllTagsResp.ProtoReflect.Descriptor instead.
func (*GetAllTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{20}
}

func (x *GetAllTagsResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProblemAddTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64   `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId  int64   `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	TagIds     []int64 `protobuf:"varint,3,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
}

func (x *ProblemAddTagsReq) Reset() {
	*x = ProblemAddTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddTagsReq) ProtoMessage() {}

func (x *ProblemAddTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddTagsReq.ProtoReflect.Descriptor instead.
func (*ProblemAddTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{21}
}

func (x *ProblemAddTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *ProblemAddTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemAddTagsReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type ProblemAddTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemAddTagsResp) Reset() {
	*x = ProblemAddTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemAddTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemAddTagsResp) ProtoMessage() {}

func (x *ProblemAddTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemAddTagsResp.ProtoReflect.Descriptor instead.
func (*ProblemAddTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{22}
}

type ProblemDeleteTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64   `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId  int64   `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	TagIds     []int64 `protobuf:"varint,3,rep,packed,name=tagIds,proto3" json:"tagIds,omitempty"`
}

func (x *ProblemDeleteTagsReq) Reset() {
	*x = ProblemDeleteTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteTagsReq) ProtoMessage() {}

func (x *ProblemDeleteTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteTagsReq.ProtoReflect.Descriptor instead.
func (*ProblemDeleteTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{23}
}

func (x *ProblemDeleteTagsReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *ProblemDeleteTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *ProblemDeleteTagsReq) GetTagIds() []int64 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

type ProblemDeleteTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProblemDeleteTagsResp) Reset() {
	*x = ProblemDeleteTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProblemDeleteTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemDeleteTagsResp) ProtoMessage() {}

func (x *ProblemDeleteTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemDeleteTagsResp.ProtoReflect.Descriptor instead.
func (*ProblemDeleteTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{24}
}

type GetProblemTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemTagsReq) Reset() {
	*x = GetProblemTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTagsReq) ProtoMessage() {}

func (x *GetProblemTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTagsReq.ProtoReflect.Descriptor instead.
func (*GetProblemTagsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{25}
}

func (x *GetProblemTagsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemTagsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tags []*TagInfo `protobuf:"bytes,1,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *GetProblemTagsResp) Reset() {
	*x = GetProblemTagsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemTagsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemTagsResp) ProtoMessage() {}

func (x *GetProblemTagsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemTagsResp.ProtoReflect.Descriptor instead.
func (*GetProblemTagsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{26}
}

func (x *GetProblemTagsResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ExampleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleId   int64  `protobuf:"varint,1,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
	Input       string `protobuf:"bytes,2,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	Explanation string `protobuf:"bytes,4,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *ExampleInfo) Reset() {
	*x = ExampleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExampleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExampleInfo) ProtoMessage() {}

func (x *ExampleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExampleInfo.ProtoReflect.Descriptor instead.
func (*ExampleInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{27}
}

func (x *ExampleInfo) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

func (x *ExampleInfo) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *ExampleInfo) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *ExampleInfo) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type AddExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId  int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId   int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Input       string `protobuf:"bytes,3,opt,name=input,proto3" json:"input,omitempty"`
	Output      string `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Explanation string `protobuf:"bytes,5,opt,name=explanation,proto3" json:"explanation,omitempty"`
}

func (x *AddExampleReq) Reset() {
	*x = AddExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExampleReq) ProtoMessage() {}

func (x *AddExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExampleReq.ProtoReflect.Descriptor instead.
func (*AddExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{28}
}

func (x *AddExampleReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddExampleReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddExampleReq) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *AddExampleReq) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *AddExampleReq) GetExplanation() string {
	if x != nil {
		return x.Explanation
	}
	return ""
}

type AddExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddExampleResp) Reset() {
	*x = AddExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExampleResp) ProtoMessage() {}

func (x *AddExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExampleResp.ProtoReflect.Descriptor instead.
func (*AddExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{29}
}

func (x *AddExampleResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ExampleId  int64 `protobuf:"varint,2,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
}

func (x *DeleteExampleReq) Reset() {
	*x = DeleteExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExampleReq) ProtoMessage() {}

func (x *DeleteExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExampleReq.ProtoReflect.Descriptor instead.
func (*DeleteExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteExampleReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeleteExampleReq) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

type DeleteExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteExampleResp) Reset() {
	*x = DeleteExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteExampleResp) ProtoMessage() {}

func (x *DeleteExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteExampleResp.ProtoReflect.Descriptor instead.
func (*DeleteExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{31}
}

type UpdateExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64        `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	Example    *ExampleInfo `protobuf:"bytes,2,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *UpdateExampleReq) Reset() {
	*x = UpdateExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExampleReq) ProtoMessage() {}

func (x *UpdateExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExampleReq.ProtoReflect.Descriptor instead.
func (*UpdateExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateExampleReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateExampleReq) GetExample() *ExampleInfo {
	if x != nil {
		return x.Example
	}
	return nil
}

type UpdateExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateExampleResp) Reset() {
	*x = UpdateExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateExampleResp) ProtoMessage() {}

func (x *UpdateExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateExampleResp.ProtoReflect.Descriptor instead.
func (*UpdateExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{33}
}

type GetExampleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExampleId int64 `protobuf:"varint,1,opt,name=exampleId,proto3" json:"exampleId,omitempty"`
}

func (x *GetExampleReq) Reset() {
	*x = GetExampleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExampleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleReq) ProtoMessage() {}

func (x *GetExampleReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleReq.ProtoReflect.Descriptor instead.
func (*GetExampleReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{34}
}

func (x *GetExampleReq) GetExampleId() int64 {
	if x != nil {
		return x.ExampleId
	}
	return 0
}

type GetExampleResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Example *ExampleInfo `protobuf:"bytes,1,opt,name=example,proto3" json:"example,omitempty"`
}

func (x *GetExampleResp) Reset() {
	*x = GetExampleResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExampleResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExampleResp) ProtoMessage() {}

func (x *GetExampleResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExampleResp.ProtoReflect.Descriptor instead.
func (*GetExampleResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{35}
}

func (x *GetExampleResp) GetExample() *ExampleInfo {
	if x != nil {
		return x.Example
	}
	return nil
}

type GetProblemExamplesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemExamplesReq) Reset() {
	*x = GetProblemExamplesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemExamplesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemExamplesReq) ProtoMessage() {}

func (x *GetProblemExamplesReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemExamplesReq.ProtoReflect.Descriptor instead.
func (*GetProblemExamplesReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{36}
}

func (x *GetProblemExamplesReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemExamplesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Examples []*ExampleInfo `protobuf:"bytes,1,rep,name=examples,proto3" json:"examples,omitempty"`
}

func (x *GetProblemExamplesResp) Reset() {
	*x = GetProblemExamplesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemExamplesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemExamplesResp) ProtoMessage() {}

func (x *GetProblemExamplesResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemExamplesResp.ProtoReflect.Descriptor instead.
func (*GetProblemExamplesResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{37}
}

func (x *GetProblemExamplesResp) GetExamples() []*ExampleInfo {
	if x != nil {
		return x.Examples
	}
	return nil
}

type HintInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintId  int64  `protobuf:"varint,1,opt,name=hintId,proto3" json:"hintId,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *HintInfo) Reset() {
	*x = HintInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HintInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HintInfo) ProtoMessage() {}

func (x *HintInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HintInfo.ProtoReflect.Descriptor instead.
func (*HintInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{38}
}

func (x *HintInfo) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

func (x *HintInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId  int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *AddHintReq) Reset() {
	*x = AddHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHintReq) ProtoMessage() {}

func (x *AddHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHintReq.ProtoReflect.Descriptor instead.
func (*AddHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{39}
}

func (x *AddHintReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddHintReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddHintReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddHintResp) Reset() {
	*x = AddHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddHintResp) ProtoMessage() {}

func (x *AddHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddHintResp.ProtoReflect.Descriptor instead.
func (*AddHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{40}
}

func (x *AddHintResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	HintId     int64 `protobuf:"varint,2,opt,name=hintId,proto3" json:"hintId,omitempty"`
}

func (x *DeleteHintReq) Reset() {
	*x = DeleteHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHintReq) ProtoMessage() {}

func (x *DeleteHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHintReq.ProtoReflect.Descriptor instead.
func (*DeleteHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{41}
}

func (x *DeleteHintReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeleteHintReq) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

type DeleteHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteHintResp) Reset() {
	*x = DeleteHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHintResp) ProtoMessage() {}

func (x *DeleteHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHintResp.ProtoReflect.Descriptor instead.
func (*DeleteHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{42}
}

type UpdateHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64     `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	Hint       *HintInfo `protobuf:"bytes,2,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *UpdateHintReq) Reset() {
	*x = UpdateHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHintReq) ProtoMessage() {}

func (x *UpdateHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHintReq.ProtoReflect.Descriptor instead.
func (*UpdateHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{43}
}

func (x *UpdateHintReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateHintReq) GetHint() *HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type UpdateHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateHintResp) Reset() {
	*x = UpdateHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHintResp) ProtoMessage() {}

func (x *UpdateHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHintResp.ProtoReflect.Descriptor instead.
func (*UpdateHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{44}
}

type GetHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HintId int64 `protobuf:"varint,1,opt,name=hintId,proto3" json:"hintId,omitempty"`
}

func (x *GetHintReq) Reset() {
	*x = GetHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintReq) ProtoMessage() {}

func (x *GetHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintReq.ProtoReflect.Descriptor instead.
func (*GetHintReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{45}
}

func (x *GetHintReq) GetHintId() int64 {
	if x != nil {
		return x.HintId
	}
	return 0
}

type GetHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hint *HintInfo `protobuf:"bytes,1,opt,name=hint,proto3" json:"hint,omitempty"`
}

func (x *GetHintResp) Reset() {
	*x = GetHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHintResp) ProtoMessage() {}

func (x *GetHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHintResp.ProtoReflect.Descriptor instead.
func (*GetHintResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{46}
}

func (x *GetHintResp) GetHint() *HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type GetProblemHintsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetProblemHintsReq) Reset() {
	*x = GetProblemHintsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemHintsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemHintsReq) ProtoMessage() {}

func (x *GetProblemHintsReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemHintsReq.ProtoReflect.Descriptor instead.
func (*GetProblemHintsReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{47}
}

func (x *GetProblemHintsReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetProblemHintsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hint []*HintInfo `protobuf:"bytes,1,rep,name=hint,proto3" json:"hint,omitempty"`
}

func (x *GetProblemHintsResp) Reset() {
	*x = GetProblemHintsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProblemHintsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProblemHintsResp) ProtoMessage() {}

func (x *GetProblemHintsResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProblemHintsResp.ProtoReflect.Descriptor instead.
func (*GetProblemHintsResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{48}
}

func (x *GetProblemHintsResp) GetHint() []*HintInfo {
	if x != nil {
		return x.Hint
	}
	return nil
}

type JudgeDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeDataId      int64  `protobuf:"varint,1,opt,name=judgeDataId,proto3" json:"judgeDataId,omitempty"`
	InputObjectName  string `protobuf:"bytes,2,opt,name=inputObjectName,proto3" json:"inputObjectName,omitempty"`
	OutputObjectName string `protobuf:"bytes,3,opt,name=outputObjectName,proto3" json:"outputObjectName,omitempty"`
}

func (x *JudgeDataInfo) Reset() {
	*x = JudgeDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JudgeDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JudgeDataInfo) ProtoMessage() {}

func (x *JudgeDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JudgeDataInfo.ProtoReflect.Descriptor instead.
func (*JudgeDataInfo) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{49}
}

func (x *JudgeDataInfo) GetJudgeDataId() int64 {
	if x != nil {
		return x.JudgeDataId
	}
	return 0
}

func (x *JudgeDataInfo) GetInputObjectName() string {
	if x != nil {
		return x.InputObjectName
	}
	return ""
}

func (x *JudgeDataInfo) GetOutputObjectName() string {
	if x != nil {
		return x.OutputObjectName
	}
	return ""
}

type AddJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId       int64  `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	ProblemId        int64  `protobuf:"varint,2,opt,name=problemId,proto3" json:"problemId,omitempty"`
	InputObjectName  string `protobuf:"bytes,3,opt,name=inputObjectName,proto3" json:"inputObjectName,omitempty"`
	OutputObjectName string `protobuf:"bytes,4,opt,name=outputObjectName,proto3" json:"outputObjectName,omitempty"`
}

func (x *AddJudgeDataReq) Reset() {
	*x = AddJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeDataReq) ProtoMessage() {}

func (x *AddJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeDataReq.ProtoReflect.Descriptor instead.
func (*AddJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{50}
}

func (x *AddJudgeDataReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *AddJudgeDataReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

func (x *AddJudgeDataReq) GetInputObjectName() string {
	if x != nil {
		return x.InputObjectName
	}
	return ""
}

func (x *AddJudgeDataReq) GetOutputObjectName() string {
	if x != nil {
		return x.OutputObjectName
	}
	return ""
}

type AddJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AddJudgeDataResp) Reset() {
	*x = AddJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddJudgeDataResp) ProtoMessage() {}

func (x *AddJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddJudgeDataResp.ProtoReflect.Descriptor instead.
func (*AddJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{51}
}

func (x *AddJudgeDataResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId  int64 `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	JudgeDataId int64 `protobuf:"varint,2,opt,name=judgeDataId,proto3" json:"judgeDataId,omitempty"`
}

func (x *DeleteJudgeDataReq) Reset() {
	*x = DeleteJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeDataReq) ProtoMessage() {}

func (x *DeleteJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeDataReq.ProtoReflect.Descriptor instead.
func (*DeleteJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{52}
}

func (x *DeleteJudgeDataReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *DeleteJudgeDataReq) GetJudgeDataId() int64 {
	if x != nil {
		return x.JudgeDataId
	}
	return 0
}

type DeleteJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteJudgeDataResp) Reset() {
	*x = DeleteJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJudgeDataResp) ProtoMessage() {}

func (x *DeleteJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJudgeDataResp.ProtoReflect.Descriptor instead.
func (*DeleteJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{53}
}

type UpdateJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorId int64          `protobuf:"varint,1,opt,name=operatorId,proto3" json:"operatorId,omitempty"`
	JudgeData  *JudgeDataInfo `protobuf:"bytes,2,opt,name=judgeData,proto3" json:"judgeData,omitempty"`
}

func (x *UpdateJudgeDataReq) Reset() {
	*x = UpdateJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeDataReq) ProtoMessage() {}

func (x *UpdateJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeDataReq.ProtoReflect.Descriptor instead.
func (*UpdateJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{54}
}

func (x *UpdateJudgeDataReq) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *UpdateJudgeDataReq) GetJudgeData() *JudgeDataInfo {
	if x != nil {
		return x.JudgeData
	}
	return nil
}

type UpdateJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateJudgeDataResp) Reset() {
	*x = UpdateJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJudgeDataResp) ProtoMessage() {}

func (x *UpdateJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJudgeDataResp.ProtoReflect.Descriptor instead.
func (*UpdateJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{55}
}

type GetJudgeDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProblemId int64 `protobuf:"varint,1,opt,name=problemId,proto3" json:"problemId,omitempty"`
}

func (x *GetJudgeDataReq) Reset() {
	*x = GetJudgeDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeDataReq) ProtoMessage() {}

func (x *GetJudgeDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeDataReq.ProtoReflect.Descriptor instead.
func (*GetJudgeDataReq) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{56}
}

func (x *GetJudgeDataReq) GetProblemId() int64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type GetJudgeDataResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JudgeData []*JudgeDataInfo `protobuf:"bytes,1,rep,name=judgeData,proto3" json:"judgeData,omitempty"`
}

func (x *GetJudgeDataResp) Reset() {
	*x = GetJudgeDataResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_problemset_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJudgeDataResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJudgeDataResp) ProtoMessage() {}

func (x *GetJudgeDataResp) ProtoReflect() protoreflect.Message {
	mi := &file_problemset_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJudgeDataResp.ProtoReflect.Descriptor instead.
func (*GetJudgeDataResp) Descriptor() ([]byte, []int) {
	return file_problemset_proto_rawDescGZIP(), []int{57}
}

func (x *GetJudgeDataResp) GetJudgeData() []*JudgeDataInfo {
	if x != nil {
		return x.JudgeData
	}
	return nil
}

var File_problemset_proto protoreflect.FileDescriptor

var file_problemset_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x22, 0xcd,
	0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x20,
	0x0a, 0x0e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x50, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x34, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0xb5, 0x02,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x61,
	0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xd8, 0x02, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66,
	0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x63, 0x75, 0x6c, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x73, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0xd2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63, 0x75, 0x6c,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x69, 0x66, 0x66, 0x69, 0x63,
	0x75, 0x6c, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x49, 0x0a, 0x11, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x40, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x45, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x10, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x49, 0x0a, 0x11, 0x4d, 0x75, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x4d, 0x75,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x59, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x0f, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x22, 0x33,
	0x0a, 0x07, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x39, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x69,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x22, 0x14, 0x0a, 0x12, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x6c, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x64, 0x73, 0x22, 0x17, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x31, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x27, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x7b, 0x0a, 0x0b, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x65,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x31, 0x0a, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x07, 0x65,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x22, 0x35,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x33, 0x0a, 0x08, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x45,
	0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x08, 0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x22, 0x64, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x48,
	0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x69, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x10, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x59, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x48,
	0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0x10, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x24, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68,
	0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0x32,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x49, 0x64, 0x22, 0x3f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x68, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x48, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x68,
	0x69, 0x6e, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6a, 0x75, 0x64, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa5, 0x01,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x22, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x12, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49,
	0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x6d, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x37,
	0x0a, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6a, 0x75,
	0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2f,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22,
	0x4b, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x92, 0x03, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x43, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41,
	0x64, 0x64, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1c,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52,
	0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x32, 0xdd, 0x04, 0x0a, 0x03, 0x54, 0x61, 0x67, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x54, 0x61, 0x67, 0x73, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x4d, 0x75,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4d, 0x75, 0x73, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x4d, 0x75, 0x73, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x43, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x12, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x61, 0x67,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x41, 0x64, 0x64, 0x54, 0x61, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54,
	0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x41, 0x64, 0x64, 0x54, 0x61,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x58, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61,
	0x67, 0x73, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x32, 0x8c, 0x03, 0x0a, 0x07, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x43, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d,
	0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x4c, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x5b, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x32, 0xdc, 0x02, 0x0a, 0x04, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x48, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65,
	0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x48, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48,
	0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x43, 0x0a, 0x0a, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3a, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x32,
	0xc9, 0x02, 0x0a, 0x09, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x41, 0x64, 0x64, 0x4a, 0x75, 0x64, 0x67, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a,
	0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x0f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x49, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65,
	0x74, 0x4a, 0x75, 0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x75,
	0x64, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0e, 0x5a, 0x0c, 0x2e,
	0x2f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x73, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_problemset_proto_rawDescOnce sync.Once
	file_problemset_proto_rawDescData = file_problemset_proto_rawDesc
)

func file_problemset_proto_rawDescGZIP() []byte {
	file_problemset_proto_rawDescOnce.Do(func() {
		file_problemset_proto_rawDescData = protoimpl.X.CompressGZIP(file_problemset_proto_rawDescData)
	})
	return file_problemset_proto_rawDescData
}

var file_problemset_proto_msgTypes = make([]protoimpl.MessageInfo, 58)
var file_problemset_proto_goTypes = []any{
	(*AddProblemReq)(nil),          // 0: problemset.AddProblemReq
	(*AddProblemResp)(nil),         // 1: problemset.AddProblemResp
	(*DeleteProblemReq)(nil),       // 2: problemset.DeleteProblemReq
	(*DeleteProblemResp)(nil),      // 3: problemset.DeleteProblemResp
	(*GetProblemContentReq)(nil),   // 4: problemset.GetProblemContentReq
	(*GetProblemContentResp)(nil),  // 5: problemset.GetProblemContentResp
	(*UpdateProblemReq)(nil),       // 6: problemset.UpdateProblemReq
	(*UpdateProblemResp)(nil),      // 7: problemset.UpdateProblemResp
	(*SearchProblemReq)(nil),       // 8: problemset.SearchProblemReq
	(*SearchProblemResp)(nil),      // 9: problemset.SearchProblemResp
	(*AddTagsReq)(nil),             // 10: problemset.AddTagsReq
	(*AddTagsResp)(nil),            // 11: problemset.AddTagsResp
	(*DeleteTagsReq)(nil),          // 12: problemset.DeleteTagsReq
	(*DeleteTagsResp)(nil),         // 13: problemset.DeleteTagsResp
	(*MustDeleteTagsReq)(nil),      // 14: problemset.MustDeleteTagsReq
	(*MustDeleteTagsResp)(nil),     // 15: problemset.MustDeleteTagsResp
	(*UpdateTagsReq)(nil),          // 16: problemset.UpdateTagsReq
	(*UpdateTagsResp)(nil),         // 17: problemset.UpdateTagsResp
	(*GetAllTagsReq)(nil),          // 18: problemset.GetAllTagsReq
	(*TagInfo)(nil),                // 19: problemset.TagInfo
	(*GetAllTagsResp)(nil),         // 20: problemset.GetAllTagsResp
	(*ProblemAddTagsReq)(nil),      // 21: problemset.ProblemAddTagsReq
	(*ProblemAddTagsResp)(nil),     // 22: problemset.ProblemAddTagsResp
	(*ProblemDeleteTagsReq)(nil),   // 23: problemset.ProblemDeleteTagsReq
	(*ProblemDeleteTagsResp)(nil),  // 24: problemset.ProblemDeleteTagsResp
	(*GetProblemTagsReq)(nil),      // 25: problemset.GetProblemTagsReq
	(*GetProblemTagsResp)(nil),     // 26: problemset.GetProblemTagsResp
	(*ExampleInfo)(nil),            // 27: problemset.ExampleInfo
	(*AddExampleReq)(nil),          // 28: problemset.AddExampleReq
	(*AddExampleResp)(nil),         // 29: problemset.AddExampleResp
	(*DeleteExampleReq)(nil),       // 30: problemset.DeleteExampleReq
	(*DeleteExampleResp)(nil),      // 31: problemset.DeleteExampleResp
	(*UpdateExampleReq)(nil),       // 32: problemset.UpdateExampleReq
	(*UpdateExampleResp)(nil),      // 33: problemset.UpdateExampleResp
	(*GetExampleReq)(nil),          // 34: problemset.GetExampleReq
	(*GetExampleResp)(nil),         // 35: problemset.GetExampleResp
	(*GetProblemExamplesReq)(nil),  // 36: problemset.GetProblemExamplesReq
	(*GetProblemExamplesResp)(nil), // 37: problemset.GetProblemExamplesResp
	(*HintInfo)(nil),               // 38: problemset.HintInfo
	(*AddHintReq)(nil),             // 39: problemset.AddHintReq
	(*AddHintResp)(nil),            // 40: problemset.AddHintResp
	(*DeleteHintReq)(nil),          // 41: problemset.DeleteHintReq
	(*DeleteHintResp)(nil),         // 42: problemset.DeleteHintResp
	(*UpdateHintReq)(nil),          // 43: problemset.UpdateHintReq
	(*UpdateHintResp)(nil),         // 44: problemset.UpdateHintResp
	(*GetHintReq)(nil),             // 45: problemset.GetHintReq
	(*GetHintResp)(nil),            // 46: problemset.GetHintResp
	(*GetProblemHintsReq)(nil),     // 47: problemset.GetProblemHintsReq
	(*GetProblemHintsResp)(nil),    // 48: problemset.GetProblemHintsResp
	(*JudgeDataInfo)(nil),          // 49: problemset.JudgeDataInfo
	(*AddJudgeDataReq)(nil),        // 50: problemset.AddJudgeDataReq
	(*AddJudgeDataResp)(nil),       // 51: problemset.AddJudgeDataResp
	(*DeleteJudgeDataReq)(nil),     // 52: problemset.DeleteJudgeDataReq
	(*DeleteJudgeDataResp)(nil),    // 53: problemset.DeleteJudgeDataResp
	(*UpdateJudgeDataReq)(nil),     // 54: problemset.UpdateJudgeDataReq
	(*UpdateJudgeDataResp)(nil),    // 55: problemset.UpdateJudgeDataResp
	(*GetJudgeDataReq)(nil),        // 56: problemset.GetJudgeDataReq
	(*GetJudgeDataResp)(nil),       // 57: problemset.GetJudgeDataResp
}
var file_problemset_proto_depIdxs = []int32{
	19, // 0: problemset.GetAllTagsResp.tags:type_name -> problemset.TagInfo
	19, // 1: problemset.GetProblemTagsResp.tags:type_name -> problemset.TagInfo
	27, // 2: problemset.UpdateExampleReq.example:type_name -> problemset.ExampleInfo
	27, // 3: problemset.GetExampleResp.example:type_name -> problemset.ExampleInfo
	27, // 4: problemset.GetProblemExamplesResp.examples:type_name -> problemset.ExampleInfo
	38, // 5: problemset.UpdateHintReq.hint:type_name -> problemset.HintInfo
	38, // 6: problemset.GetHintResp.hint:type_name -> problemset.HintInfo
	38, // 7: problemset.GetProblemHintsResp.hint:type_name -> problemset.HintInfo
	49, // 8: problemset.UpdateJudgeDataReq.judgeData:type_name -> problemset.JudgeDataInfo
	49, // 9: problemset.GetJudgeDataResp.judgeData:type_name -> problemset.JudgeDataInfo
	0,  // 10: problemset.Problem.AddProblem:input_type -> problemset.AddProblemReq
	2,  // 11: problemset.Problem.DeleteProblem:input_type -> problemset.DeleteProblemReq
	4,  // 12: problemset.Problem.GetProblemContent:input_type -> problemset.GetProblemContentReq
	6,  // 13: problemset.Problem.UpdateProblem:input_type -> problemset.UpdateProblemReq
	8,  // 14: problemset.Problem.SearchProblem:input_type -> problemset.SearchProblemReq
	10, // 15: problemset.Tag.AddTags:input_type -> problemset.AddTagsReq
	12, // 16: problemset.Tag.DeleteTags:input_type -> problemset.DeleteTagsReq
	14, // 17: problemset.Tag.MustDeleteTags:input_type -> problemset.MustDeleteTagsReq
	16, // 18: problemset.Tag.UpdateTags:input_type -> problemset.UpdateTagsReq
	18, // 19: problemset.Tag.GetAllTags:input_type -> problemset.GetAllTagsReq
	21, // 20: problemset.Tag.ProblemAddTags:input_type -> problemset.ProblemAddTagsReq
	23, // 21: problemset.Tag.ProblemDeleteTags:input_type -> problemset.ProblemDeleteTagsReq
	25, // 22: problemset.Tag.GetProblemTags:input_type -> problemset.GetProblemTagsReq
	28, // 23: problemset.Example.AddExample:input_type -> problemset.AddExampleReq
	30, // 24: problemset.Example.DeleteExample:input_type -> problemset.DeleteExampleReq
	32, // 25: problemset.Example.UpdateExample:input_type -> problemset.UpdateExampleReq
	34, // 26: problemset.Example.GetExample:input_type -> problemset.GetExampleReq
	36, // 27: problemset.Example.GetProblemExamples:input_type -> problemset.GetProblemExamplesReq
	39, // 28: problemset.Hint.AddHint:input_type -> problemset.AddHintReq
	41, // 29: problemset.Hint.DeleteHint:input_type -> problemset.DeleteHintReq
	43, // 30: problemset.Hint.UpdateHint:input_type -> problemset.UpdateHintReq
	45, // 31: problemset.Hint.GetHint:input_type -> problemset.GetHintReq
	47, // 32: problemset.Hint.GetProblemHints:input_type -> problemset.GetProblemHintsReq
	50, // 33: problemset.JudgeData.AddJudgeData:input_type -> problemset.AddJudgeDataReq
	52, // 34: problemset.JudgeData.DeleteJudgeData:input_type -> problemset.DeleteJudgeDataReq
	54, // 35: problemset.JudgeData.UpdateJudgeData:input_type -> problemset.UpdateJudgeDataReq
	56, // 36: problemset.JudgeData.GetJudgeData:input_type -> problemset.GetJudgeDataReq
	1,  // 37: problemset.Problem.AddProblem:output_type -> problemset.AddProblemResp
	3,  // 38: problemset.Problem.DeleteProblem:output_type -> problemset.DeleteProblemResp
	5,  // 39: problemset.Problem.GetProblemContent:output_type -> problemset.GetProblemContentResp
	7,  // 40: problemset.Problem.UpdateProblem:output_type -> problemset.UpdateProblemResp
	9,  // 41: problemset.Problem.SearchProblem:output_type -> problemset.SearchProblemResp
	11, // 42: problemset.Tag.AddTags:output_type -> problemset.AddTagsResp
	13, // 43: problemset.Tag.DeleteTags:output_type -> problemset.DeleteTagsResp
	15, // 44: problemset.Tag.MustDeleteTags:output_type -> problemset.MustDeleteTagsResp
	17, // 45: problemset.Tag.UpdateTags:output_type -> problemset.UpdateTagsResp
	20, // 46: problemset.Tag.GetAllTags:output_type -> problemset.GetAllTagsResp
	22, // 47: problemset.Tag.ProblemAddTags:output_type -> problemset.ProblemAddTagsResp
	24, // 48: problemset.Tag.ProblemDeleteTags:output_type -> problemset.ProblemDeleteTagsResp
	26, // 49: problemset.Tag.GetProblemTags:output_type -> problemset.GetProblemTagsResp
	29, // 50: problemset.Example.AddExample:output_type -> problemset.AddExampleResp
	31, // 51: problemset.Example.DeleteExample:output_type -> problemset.DeleteExampleResp
	33, // 52: problemset.Example.UpdateExample:output_type -> problemset.UpdateExampleResp
	35, // 53: problemset.Example.GetExample:output_type -> problemset.GetExampleResp
	37, // 54: problemset.Example.GetProblemExamples:output_type -> problemset.GetProblemExamplesResp
	40, // 55: problemset.Hint.AddHint:output_type -> problemset.AddHintResp
	42, // 56: problemset.Hint.DeleteHint:output_type -> problemset.DeleteHintResp
	44, // 57: problemset.Hint.UpdateHint:output_type -> problemset.UpdateHintResp
	46, // 58: problemset.Hint.GetHint:output_type -> problemset.GetHintResp
	48, // 59: problemset.Hint.GetProblemHints:output_type -> problemset.GetProblemHintsResp
	51, // 60: problemset.JudgeData.AddJudgeData:output_type -> problemset.AddJudgeDataResp
	53, // 61: problemset.JudgeData.DeleteJudgeData:output_type -> problemset.DeleteJudgeDataResp
	55, // 62: problemset.JudgeData.UpdateJudgeData:output_type -> problemset.UpdateJudgeDataResp
	57, // 63: problemset.JudgeData.GetJudgeData:output_type -> problemset.GetJudgeDataResp
	37, // [37:64] is the sub-list for method output_type
	10, // [10:37] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_problemset_proto_init() }
func file_problemset_proto_init() {
	if File_problemset_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_problemset_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AddProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemContentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemContentResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SearchProblemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*AddTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*MustDeleteTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*MustDeleteTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*TagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*GetAllTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemAddTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*ProblemDeleteTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemTagsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*ExampleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*AddExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*AddExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*GetExampleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*GetExampleResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemExamplesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemExamplesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*HintInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*AddHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*AddHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*GetHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*GetHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemHintsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*GetProblemHintsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*JudgeDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*AddJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgeDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_problemset_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*GetJudgeDataResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_problemset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   58,
			NumExtensions: 0,
			NumServices:   5,
		},
		GoTypes:           file_problemset_proto_goTypes,
		DependencyIndexes: file_problemset_proto_depIdxs,
		MessageInfos:      file_problemset_proto_msgTypes,
	}.Build()
	File_problemset_proto = out.File
	file_problemset_proto_rawDesc = nil
	file_problemset_proto_goTypes = nil
	file_problemset_proto_depIdxs = nil
}
