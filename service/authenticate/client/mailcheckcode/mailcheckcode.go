// Code generated by goctl. DO NOT EDIT.
// Source: authenticate.proto

package mailcheckcode

import (
	"context"

	"zerooj/service/authenticate/pb/authenticate"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FinishMailCheckReq      = authenticate.FinishMailCheckReq
	FinishMailCheckResp     = authenticate.FinishMailCheckResp
	VerifyMailCheckCodeReq  = authenticate.VerifyMailCheckCodeReq
	VerifyMailCheckCodeResp = authenticate.VerifyMailCheckCodeResp

	MailCheckCode interface {
		// 校验
		VerifyMailCheckCode(ctx context.Context, in *VerifyMailCheckCodeReq, opts ...grpc.CallOption) (*VerifyMailCheckCodeResp, error)
		// 邮箱验证码校验完毕
		FinishMailCheck(ctx context.Context, in *FinishMailCheckReq, opts ...grpc.CallOption) (*FinishMailCheckResp, error)
	}

	defaultMailCheckCode struct {
		cli zrpc.Client
	}
)

func NewMailCheckCode(cli zrpc.Client) MailCheckCode {
	return &defaultMailCheckCode{
		cli: cli,
	}
}

// 校验
func (m *defaultMailCheckCode) VerifyMailCheckCode(ctx context.Context, in *VerifyMailCheckCodeReq, opts ...grpc.CallOption) (*VerifyMailCheckCodeResp, error) {
	client := authenticate.NewMailCheckCodeClient(m.cli.Conn())
	return client.VerifyMailCheckCode(ctx, in, opts...)
}

// 邮箱验证码校验完毕
func (m *defaultMailCheckCode) FinishMailCheck(ctx context.Context, in *FinishMailCheckReq, opts ...grpc.CallOption) (*FinishMailCheckResp, error) {
	client := authenticate.NewMailCheckCodeClient(m.cli.Conn())
	return client.FinishMailCheck(ctx, in, opts...)
}
